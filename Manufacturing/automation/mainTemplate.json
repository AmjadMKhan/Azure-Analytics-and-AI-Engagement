{
   "$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
   "parameters":{
      "environment_code":{
         "type":"String",
         "metadata":{
            "description":"Suffix added to all resource name to make them unique. Should be less than 6 characters"
         }
      },
      "azure_login_id":{
         "type":"String",
         "metadata":{
            "description":"Azure Portal User"
         }
      },
      "azure_login_password":{
         "type":"SecureString",
         "metadata":{
            "description":"Password for Azure Portal User"
         }
      },
      "sql_administrator_login_password":{
         "type":"SecureString",
         "metadata":{
            "description":"Password for SQL Admin"
         }
      },
      "pbi_workspace_id":{
         "type":"String",
         "metadata":{
            "description":"PowerBi workspace Id"
         }
      },
      "virtual_machine_password":{
         "type":"SecureString",
         "metadata":{
            "description":"Password for VM(data generator) Admin user"
         }
      },
      "powerbi_embedded_admin_member_email":{
         "type":"String",
         "metadata":{
            "description":"Email Id for Powerbi dedicated Administrator"
         }
      },
      "location":{
         "type":"string",
         "defaultValue":"[resourceGroup().location]",
         "allowedValues":[
            "westus2",
            "eastus",
            "northeurope",
            "westeurope",
            "southeastasia",
            "australiaeast",
            "westcentralus"
         ],
         "metadata":{
            "description":"Location for all resources."
         }
      }
   },
   "variables":{
      "resource_group_name":"[resourceGroup().name]",
      "unique_suffix":"[concat(uniqueString(deployment().name), '-', parameters('environment_code'))]",
      "location":"[parameters('location')]",
      "cosmos_account_name_manufacturingdemo":"[if(greater(length(concat('cosmosdb-manufacturdemo-', uniqueString(deployment().name),parameters('environment_code'))), 43), substring(concat('cosmosdb-manufacturdemo-', uniqueString(deployment().name),parameters('environment_code')),0,43) , concat('cosmosdb-manufacturdemo-', uniqueString(deployment().name),parameters('environment_code')) )]",
      "cosmos_database_name_manufacturingdemo_industrial":"industrial",
      "cosmos_database_container_name_historical_data":"historical-data",
      "cosmos_database_container_name_historical_data_adf":"historical-data-adf",
      "cosmos_account_name_mfgdemo":"[concat('cosmosdb-mfgdemo-',variables('unique_suffix'))]",
      "cosmos_database_name_mfgdemo_industrial":"industrial",
      "cosmos_database_name_mfgdemo_manufacturing":"manufacturing",
      "cosmos_database_container_name_MfgMesQuality":"MfgMesQuality",
      "cosmos_database_container_name_historical":"historical",
      "cosmos_database_container_name_anomalies":"anomalies",
      "cosmos_database_container_name_AggMfgMesQuality":"AggMfgMesQuality",
      "cosmos_database_container_name_manufacturing_data":"manufacturing-data",
      "cosmos_database_container_name_mfg_mes_quality1":"mfg-mes-quality1",
      "cosmos_database_container_name_htap-hvac":"htap-hvac",
      "cosmos_database_container_name_mfg_quality":"mfg-quality",
      "cosmos_database_container_name_spark_streaming":"spark-streaming",
      "cosmos_database_container_name_manufacturing_analytical_store":"manufacturing-analytical-store",
      "cosmos_database_container_name_mfg_mes_quality":"mfg-mes-quality",
      "iot_hub_name_mfgiothub":"[concat('mfgiothub-',variables('unique_suffix'))]",
      "iot_hub_name_mfgiothubCosmosDB":"[concat('mfgiothubCosmosDB-',variables('unique_suffix'))]",
      "iot_hub_name_mfgIotHubTelemetry":"[concat('mfgIotHubTelemetry-',variables('unique_suffix'))]",
      "iot_hub_name_raceCarIotHub":"[concat('raceCarIotHub-',variables('unique_suffix'))]",
      "iot_hub_consumer_group_mfgiothub":"cg-mfgiothub",
      "iot_hub_consumer_group_mfgiothubCosmosDB":"cg-mfgiothubCosmosDB",
      "iot_hub_consumer_group_mfgIotHubTelemetry":"cg-mfgIotHubTelemetry",
      "iot_hub_consumer_group_raceCarIotHub":"cg-raceCarIotHub",
      "storage_account_name_dreamdemostorageforgen2":"[if(greater(length(concat('dreamdemostrggen2', uniqueString(deployment().name),parameters('environment_code'))), 24), substring(concat('dreamdemostrggen2', uniqueString(deployment().name),parameters('environment_code')),0,24) , concat('dreamdemostrggen2', uniqueString(deployment().name),parameters('environment_code')) )]",
      "asa_name_mfgasa":"[concat('mfgasa-',variables('unique_suffix'))]",
      "asa_query_mfgasa":"WITH CleanedRecord AS ( SELECT udf.removeIoTHubField([mfg-iothub-in]) AS CleanedField FROM [mfg-iothub-in] )  \n SELECT CleanedField.* INTO [synapse-mfgiotmillingcanning] FROM CleanedRecord WHERE CleanedField.OperationId = 103 \n SELECT * INTO [powerbi-milling-canning] FROM [mfgiothub] \n SELECT mfgiothub.* INTO [storage-lathe-thread-cut] FROM  [mfgiothub] WHERE mfgiothub.OperationId = 101 \n SELECT  mfgiothub.* INTO  [storage-lathe-peck-drill] FROM mfgiothub WHERE mfgiothub.OperationId = 102 \n SELECT mfgiothub.EpochTime, mfgiothub.StringDateTime, mfgiothub.JobCode, mfgiothub.OperationId, mfgiothub.BatchCode, mfgiothub.MachineCode, mfgiothub.VibrationX, mfgiothub.VibrationY, mfgiothub.VibrationZ, mfgiothub.XAxis, mfgiothub.YAxis, mfgiothub.ZAxis, mfgiothub.SpindleSpeed, mfgiothub.AnomalyTemperature, mfgiothub.CoolantTemperature, mfgiothub.EventProcessedUtcTime, mfgiothub.PartitionId, mfgiothub.EventEnqueuedUtcTime INTO [storage-milling-canning] FROM mfgiothub WHERE mfgiothub.OperationId = 10 \n SELECT mfgiothub.EpochTime, mfgiothub.StringDateTime, mfgiothub.JobCode, mfgiothub.OperationId, mfgiothub.BatchCode, mfgiothub.MachineCode, mfgiothub.VibrationX, mfgiothub.VibrationY, mfgiothub.VibrationZ, mfgiothub.XAxis, mfgiothub.YAxis, mfgiothub.ZAxis, mfgiothub.SpindleSpeed, mfgiothub.AnomalyTemperature, mfgiothub.CoolantTemperature, mfgiothub.EventProcessedUtcTime, mfgiothub.PartitionId, mfgiothub.EventEnqueuedUtcTime INTO [function-synapse-d365] FROM  mfgiothub WHERE mfgiothub.AnomalyTemperature = 1",
      "asa_name_mfgasaCosmosDB":"[concat('mfgasaCosmosDB-',variables('unique_suffix'))]",
      "asa_query_mfgasaCosmosDB":"SELECT * INTO [cosmosdboutput] FROM [mfgasaCosmosDB] \n SELECT * INTO [cosmosdboutputNoHTAP] FROM [mfgasaCosmosDB]",
      "asa_name_mfgASATelemetry":"[concat('mfgASATelemetry-',variables('unique_suffix'))]",
      "asa_query_mfgASATelemetry":"SELECT * INTO [mfgStorageTelemetry-out] FROM [mfgIoTHubTelemetry-in]",
      "asa_name_race_car_asa":"[concat('race-car-asa-',variables('unique_suffix'))]",
      "asa_query_race_car_asa":"SELECT * INTO [power-bi] FROM [race-car]",
      "virtual_machine_nic_name":"[if(greater(length(concat('datavmnic',parameters('environment_code'), uniqueString(deployment().name))), 14), substring(concat('datavmnic', parameters('environment_code'),uniqueString(deployment().name)),0,14) , concat('datavmnic',parameters('environment_code'), uniqueString(deployment().name)) )]",
      "virtual_machine_name":"[if(greater(length(concat('datavm-',parameters('environment_code'), uniqueString(deployment().name))), 14), substring(concat('data-gen-', parameters('environment_code'),uniqueString(deployment().name)),0,14) , concat('data-gen-',parameters('environment_code'), uniqueString(deployment().name)) )]",
      "virtual_machine_username":"data-generator",
      "virtual_machine_password":"[parameters('virtual_machine_password')]",
      "virtual_machine_size":"Standard_B4ms",
      "virtual_machine_vnet_subnet_name":"datavmsubnet",
      "virtual_machine_nsg_name":"[if(greater(length(concat('datavmnsg',parameters('environment_code'), uniqueString(deployment().name))), 14), substring(concat('datavmnsg', parameters('environment_code'),uniqueString(deployment().name)),0,14) , concat('datavmnsg',parameters('environment_code'), uniqueString(deployment().name)) )]",
      "virtual_machine_public_ip_name":"[if(greater(length(concat('datavmip',parameters('environment_code'), uniqueString(deployment().name))), 14), substring(concat('datavmip', parameters('environment_code'),uniqueString(deployment().name)),0,14) , concat('datavmip',parameters('environment_code'), uniqueString(deployment().name)) )]",
      "virtual_machine_vnet_name":"[if(greater(length(concat('datavmvnet',parameters('environment_code'), uniqueString(deployment().name))), 14), substring(concat('datavmvnet', parameters('environment_code'),uniqueString(deployment().name)),0,14) , concat('datavmvnet',parameters('environment_code'), uniqueString(deployment().name)) )]",
      "virtual_machine_vnet_address_prefix":"10.0.0.0/16",
      "powershell_pre_script_path":"https://publicassetstoragexor.blob.core.windows.net/assets/gitinstall.ps1",
      "powershell_pre_script_setup_path":"https://publicassetstoragexor.blob.core.windows.net/assets/gitsetup",
      "rbac_guid_owner":"[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
      "script_args":"[concat(' -iot_hub_car ', variables('iot_hub_name_raceCarIotHub'),' -iot_hub_telemetry ', variables('iot_hub_name_mfgIotHubTelemetry'),' -iot_hub ', variables('iot_hub_name_mfgiothub'),' -iot_hub_sendtohub ', variables('iot_hub_name_mfgiothubCosmosDB'),' -synapseWorkspaceName ', variables('workspace_name_dreamdemosynapse'),' -wsId ', parameters('pbi_workspace_id'),' -sqlPoolName ', variables('sql_compute_name'),' -dataLakeAccountName ', variables('storage_account_name_dreamdemostorageforgen2'), ' -sqlUser ', variables('sql_administrator_login_id'), ' -sqlPassword ', parameters('sql_administrator_login_password'),' -resourceGroup ', variables('resource_group_name'), ' -mfgasaName ', variables('asa_name_mfgasa'),' -carasaName ', variables('asa_name_race_car_asa'),' -cosmos_account_name_mfgdemo ', variables('cosmos_account_name_mfgdemo'),' -cosmos_database_name_mfgdemo_manufacturing ', variables('cosmos_database_name_mfgdemo_manufacturing'),' -mfgasaCosmosDBName ',variables('asa_name_mfgasaCosmosDB'),' -mfgASATelemetryName ',variables('asa_name_mfgASATelemetry'),' -azure_login_id ',parameters('azure_login_id'),' -azure_login_password ',parameters('azure_login_password'),' -app_name_telemetry_car ',variables('car_telemetry_app_service_name'),' -app_name_telemetry ',variables('data_gen_telemetry_app_service_name'),' -app_name_hub ',variables('sku2_telemetry_app_service_name'),' -app_name_sendtohub ',variables('sendtohub_telemetry_app_service_name'),' -ai_name_telemetry_car ',variables('car_telemetry_ai_name'),' -ai_name_telemetry ',variables('data_gen_telemetry_ai_name'),' -ai_name_hub ',variables('sku2_telemetry_ai_name'),' -ai_name_sendtohub ',variables('sendtohub_telemetry_ai_name'),' -sparkPoolName ',variables('spark_compute_name'),' -cdp_vision_app_service_name ',variables('cdp_vision_app_service_name'))]",
      "azure_function_ase_name":"[concat('function-asp-',variables('unique_suffix'))]",
      "azure_function_storage_name":"[if(greater(length(concat('fwa', uniqueString(deployment().name),parameters('environment_code'))), 24), substring(concat('fwa', uniqueString(deployment().name),parameters('environment_code')),0,24) , concat('fwa', uniqueString(deployment().name),parameters('environment_code')) )]",
      "azure_function_ai_name":"[concat('functions-ai-',variables('unique_suffix'))]",
      "azure_function_functions_app_name":"[concat('functions-web-app-',variables('unique_suffix'))]",
      "azure_function_functions_zip_url":"functions-web-app.zip",
      "workspace_name_dreamdemosynapse":"[concat('manufacturingdemo',parameters('environment_code'),uniqueString(deployment().name))]",
      "default_data_lake_storage_file_system_name":"tempdata",
      "default_data_lake_storage_account_url":"[concat('https://', variables('storage_account_name_dreamdemostorageforgen2'), '.dfs.core.windows.net')]",
      "sql_compute_name":"ManufacturingDW",
      "sql_administrator_login_id":"ManufacturingUser",
      "spark_compute_name":"MFGDreamPool",
      "compute_subnet_id":"",
      "sql_server_sku":"DW500c",
      "spark_auto_scale_enabled":"true",
      "spark_min_node_count":"3",
      "spark_max_node_count":"4",
      "spark_node_count":"1",
      "spark_node_size_family":"MemoryOptimized",
      "spark_node_size":"Small",
      "spark_auto_pause_enabled":"true",
      "spark_auto_pause_delay_in_minutes":"15",
      "spark_version":"2.4",
      "packages_requirements_file_name":"requirements.txt",
      "packages_requirements_content":"seaborn==0.10.1\nxgboost==1.0.2\nonnxruntime==1.0.0\nwerkzeug==0.16.1\nnimbusml==1.7.1\nruamel.yaml==0.16.9\nazureml-train-automl-runtime==1.6.0\nscikit-learn==0.20.3\nnumpy==1.16.2\npandas==0.23.4\nscipy==1.4.1",
      "container_registry_name":"[concat('mfgdemo',parameters('environment_code'),uniqueString(deployment().name))]",
      "cluster_name":"[concat('aks-',variables('unique_suffix'))]",
      "aks_dns_prefix":"",
      "aks_os_disk_size_gb":30,
      "aks_agent_count":"",
      "aks_agent_vm_size":"",
      "aks_os_type":"",
      "linux_admin_username":"",
      "ssh_rsa_public_key":"",
      "service_principal_client_id":"",
      "service_principal_client_secret":"",
      "storage_account_name_manufacturingdemo12":"[if(greater(length(concat('mfgdemo12', uniqueString(deployment().name),parameters('environment_code'))), 24),substring(concat('mfgdemo12', uniqueString(deployment().name),parameters('environment_code')),0,24) , concat('mfgdemo12', uniqueString(deployment().name),parameters('environment_code')) )]",
      "storage_account_name_manufacturingdemoassets":"[if(greater(length(concat('mfgdemoassets', uniqueString(deployment().name),parameters('environment_code'))), 24), substring(concat('mfgdemoassets', uniqueString(deployment().name),parameters('environment_code')),0,24) , concat('mfgdemoassets',uniqueString(deployment().name),parameters('environment_code')) )]",
      "storage_account_name_manufacturingwebstaging":"[if(greater(length(concat('mfgwebstaging', uniqueString(deployment().name),parameters('environment_code'))), 24), substring(concat('mfgwebstaging', uniqueString(deployment().name),parameters('environment_code')),0,24) , concat('mfgwebstaging', uniqueString(deployment().name),parameters('environment_code')) )]",
      "cdp_vision_ase_name":"[concat('cdp-vision-',variables('unique_suffix'))]",
      "cdp_vision_ai_name":"[concat('cdp-vision-',variables('unique_suffix'))]",
      "cdp_vision_app_service_name":"[concat('cdp-vision-',variables('unique_suffix'))]",
      "manufacturing_demo_ecommerce_ase_name":"[concat('manufacturing-demo-ecommerce-',variables('unique_suffix'))]",
      "manufacturing_demo_ecommerce_ai_name":"[concat('manufacturing-demo-ecommerce-',variables('unique_suffix'))]",
      "manufacturing_demo_ecommerce_app_service_name":"[concat('manufacturing-demo-ecommerce-',variables('unique_suffix'))]",
      "powerbi_embeded_mfg_name":"[concat('powerbiembededmfg-',variables('unique_suffix'))]",
      "car_telemetry_ase_name":"[concat('car-telemetry-ase',variables('unique_suffix'))]",
      "car_telemetry_ai_name":"[concat('car-telemetry-ai-',variables('unique_suffix'))]",
      "car_telemetry_app_service_name":"[concat('car-telemetry-app-',variables('unique_suffix'))]",
      "sku2_telemetry_ase_name":"[concat('sku2-telemetry-ase-',variables('unique_suffix'))]",
      "sku2_telemetry_ai_name":"[concat('sku2-telemetry-ai-',variables('unique_suffix'))]",
      "sku2_telemetry_app_service_name":"[concat('sku2-telemetry-app-',variables('unique_suffix'))]",
      "sendtohub_telemetry_ase_name":"[concat('sendtohub-telemrtry-ase-',variables('unique_suffix'))]",
      "sendtohub_telemetry_ai_name":"[concat('sendtohub-telemrtry-ai-',variables('unique_suffix'))]",
      "sendtohub_telemetry_app_service_name":"[concat('sendtohub-telemrtry-app-',variables('unique_suffix'))]",
      "data_gen_telemetry_ase_name":"[concat('datagen-telemetry-ase-',variables('unique_suffix'))]",
      "data_gen_telemetry_ai_name":"[concat('datagen-telemetry-ai-',variables('unique_suffix'))]",
      "data_gen_telemetry_app_service_name":"[concat('datagen-telemetry-app-',variables('unique_suffix'))]"
   },
   "resources":[
      {
         "name":"[toLower(variables('cosmos_account_name_manufacturingdemo'))]",
         "type":"Microsoft.DocumentDB/databaseAccounts",
         "apiVersion":"2019-12-12",
         "location":"[variables('location')]",
         "kind":"GlobalDocumentDB",
         "properties":{
            "consistencyPolicy":{
               "defaultConsistencyLevel":"Eventual"
            },
            "locations":[
               {
                  "locationName":"[variables('location')]"
               }
            ],
            "databaseAccountOfferType":"Standard",
            "enableAnalyticalStorage":true,
            "publicNetworkAccess":"Enabled"
         }
      },
      {
         "name":"[concat(variables('cosmos_account_name_manufacturingdemo'), '/', toLower(variables('cosmos_database_name_mfgdemo_industrial')))]",
         "type":"Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
         "apiVersion":"2019-12-12",
         "dependsOn":[
            "[concat('Microsoft.DocumentDB/databaseAccounts/', toLower(variables('cosmos_account_name_manufacturingdemo')))]"
         ],
         "properties":{
            "resource":{
               "id":"[variables('cosmos_database_name_mfgdemo_industrial')]"
            },
            "options":{
               "throughput":"400"
            }
         }
      },
      {
         "name":"[concat(variables('cosmos_account_name_manufacturingdemo'), '/', variables('cosmos_database_name_mfgdemo_industrial'), '/', variables('cosmos_database_container_name_historical_data'))]",
         "type":"Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
         "apiVersion":"2019-12-12",
         "dependsOn":[
            "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases',variables('cosmos_account_name_manufacturingdemo'), variables('cosmos_database_name_mfgdemo_industrial'))]"
         ],
         "properties":{
            "resource":{
               "id":"[variables('cosmos_database_container_name_historical_data')]",
               "indexingPolicy":{
                  "indexingMode":"consistent",
                  "automatic":true,
                  "includedPaths":[
                     {
                        "path":"/*"
                     }
                  ],
                  "excludedPaths":[
                     {
                        "path":"/\"_etag\"/?"
                     }
                  ]
               },
               "partitionKey":{
                  "paths":[
                     "/SyntheticPartitionKey"
                  ],
                  "kind":"Hash"
               },
               "analyticalStorageTtl":-1,
               "conflictResolutionPolicy":{
                  "mode":"LastWriterWins",
                  "conflictResolutionPath":"/_ts"
               }
            }
         }
      },
      {
         "name":"[concat(variables('cosmos_account_name_manufacturingdemo'), '/', variables('cosmos_database_name_mfgdemo_industrial'), '/', variables('cosmos_database_container_name_historical_data_adf'))]",
         "type":"Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
         "apiVersion":"2019-12-12",
         "dependsOn":[
            "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases',variables('cosmos_account_name_manufacturingdemo'), variables('cosmos_database_name_mfgdemo_industrial'))]"
         ],
         "properties":{
            "resource":{
               "id":"[variables('cosmos_database_container_name_historical_data_adf')]",
               "indexingPolicy":{
                  "indexingMode":"consistent",
                  "automatic":true,
                  "includedPaths":[
                     {
                        "path":"/*"
                     }
                  ],
                  "excludedPaths":[
                     {
                        "path":"/\"_etag\"/?"
                     }
                  ]
               },
               "partitionKey":{
                  "paths":[
                     "/SyntheticPartitionKey"
                  ],
                  "kind":"Hash"
               },
               "analyticalStorageTtl":-1,
               "conflictResolutionPolicy":{
                  "mode":"LastWriterWins",
                  "conflictResolutionPath":"/_ts"
               }
            }
         }
      },
      {
         "name":"[toLower(variables('cosmos_account_name_mfgdemo'))]",
         "type":"Microsoft.DocumentDB/databaseAccounts",
         "apiVersion":"2019-12-12",
         "location":"[variables('location')]",
         "kind":"GlobalDocumentDB",
         "properties":{
            "consistencyPolicy":{
               "defaultConsistencyLevel":"Eventual"
            },
            "locations":[
               {
                  "locationName":"[variables('location')]"
               }
            ],
            "databaseAccountOfferType":"Standard",
            "enableAnalyticalStorage":true,
            "publicNetworkAccess":"Enabled"
         }
      },
      {
         "name":"[concat(variables('cosmos_account_name_mfgdemo'), '/', toLower(variables('cosmos_database_name_mfgdemo_industrial')))]",
         "type":"Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
         "apiVersion":"2019-12-12",
         "dependsOn":[
            "[concat('Microsoft.DocumentDB/databaseAccounts/', toLower(variables('cosmos_account_name_mfgdemo')))]"
         ],
         "properties":{
            "resource":{
               "id":"[variables('cosmos_database_name_mfgdemo_industrial')]"
            },
            "options":{
               "throughput":"400"
            }
         }
      },
      {
         "name":"[concat(variables('cosmos_account_name_mfgdemo'), '/', toLower(variables('cosmos_database_name_mfgdemo_manufacturing')))]",
         "type":"Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
         "apiVersion":"2019-12-12",
         "dependsOn":[
            "[concat('Microsoft.DocumentDB/databaseAccounts/', toLower(variables('cosmos_account_name_mfgdemo')))]"
         ],
         "properties":{
            "resource":{
               "id":"[variables('cosmos_database_name_mfgdemo_manufacturing')]"
            }
         }
      },
      {
         "name":"[concat(variables('cosmos_account_name_mfgdemo'), '/', variables('cosmos_database_name_mfgdemo_industrial'), '/', variables('cosmos_database_container_name_historical'))]",
         "type":"Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
         "apiVersion":"2019-12-12",
         "dependsOn":[
            "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases',variables('cosmos_account_name_mfgdemo'), variables('cosmos_database_name_mfgdemo_industrial'))]"
         ],
         "properties":{
            "resource":{
               "id":"[variables('cosmos_database_container_name_historical')]",
               "indexingPolicy":{
                  "indexingMode":"consistent",
                  "automatic":true,
                  "includedPaths":[
                     {
                        "path":"/*"
                     }
                  ],
                  "excludedPaths":[
                     {
                        "path":"/\"_etag\"/?"
                     }
                  ]
               },
               "partitionKey":{
                  "paths":[
                     "/SyntheticPartitionKey"
                  ],
                  "kind":"Hash"
               },
               "analyticalStorageTtl":-1,
               "conflictResolutionPolicy":{
                  "mode":"LastWriterWins",
                  "conflictResolutionPath":"/_ts"
               }
            }
         }
      },
      {
         "name":"[concat(variables('cosmos_account_name_mfgdemo'), '/', variables('cosmos_database_name_mfgdemo_manufacturing'), '/', variables('cosmos_database_container_name_AggMfgMesQuality'))]",
         "type":"Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
         "apiVersion":"2019-12-12",
         "dependsOn":[
            "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases',variables('cosmos_account_name_mfgdemo'), variables('cosmos_database_name_mfgdemo_manufacturing'))]"
         ],
         "properties":{
            "resource":{
               "id":"[variables('cosmos_database_container_name_AggMfgMesQuality')]",
               "indexingPolicy":{
                  "indexingMode":"consistent",
                  "automatic":true,
                  "includedPaths":[
                     {
                        "path":"/*"
                     }
                  ],
                  "excludedPaths":[
                     {
                        "path":"/\"_etag\"/?"
                     }
                  ]
               },
               "partitionKey":{
                  "paths":[
                     "/SyntheticPartitionKey"
                  ],
                  "kind":"Hash"
               },
               "analyticalStorageTtl":-1,
               "conflictResolutionPolicy":{
                  "mode":"LastWriterWins",
                  "conflictResolutionPath":"/_ts"
               }
            },
            "options":{
               "throughput":"400"
            }
         }
      },
      {
         "name":"[concat(variables('cosmos_account_name_mfgdemo'), '/', variables('cosmos_database_name_mfgdemo_manufacturing'), '/', variables('cosmos_database_container_name_MfgMesQuality'))]",
         "type":"Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
         "apiVersion":"2019-12-12",
         "dependsOn":[
            "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases',variables('cosmos_account_name_mfgdemo'), variables('cosmos_database_name_mfgdemo_manufacturing'))]"
         ],
         "properties":{
            "resource":{
               "id":"[variables('cosmos_database_container_name_MfgMesQuality')]",
               "indexingPolicy":{
                  "indexingMode":"consistent",
                  "automatic":true,
                  "includedPaths":[
                     {
                        "path":"/*"
                     }
                  ],
                  "excludedPaths":[
                     {
                        "path":"/\"_etag\"/?"
                     }
                  ]
               },
               "partitionKey":{
                  "paths":[
                     "/SyntheticPartitionKey"
                  ],
                  "kind":"Hash"
               },
               "analyticalStorageTtl":-1,
               "conflictResolutionPolicy":{
                  "mode":"LastWriterWins",
                  "conflictResolutionPath":"/_ts"
               }
            },
            "options":{
               "throughput":"400"
            }
         }
      },
      {
         "name":"[concat(variables('cosmos_account_name_mfgdemo'), '/', variables('cosmos_database_name_mfgdemo_manufacturing'), '/', variables('cosmos_database_container_name_anomalies'))]",
         "type":"Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
         "apiVersion":"2019-12-12",
         "dependsOn":[
            "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases',variables('cosmos_account_name_mfgdemo'), variables('cosmos_database_name_mfgdemo_manufacturing'))]"
         ],
         "properties":{
            "resource":{
               "id":"[variables('cosmos_database_container_name_anomalies')]",
               "indexingPolicy":{
                  "indexingMode":"consistent",
                  "automatic":true,
                  "includedPaths":[
                     {
                        "path":"/*"
                     }
                  ],
                  "excludedPaths":[
                     {
                        "path":"/\"_etag\"/?"
                     }
                  ]
               },
               "partitionKey":{
                  "paths":[
                     "/SyntheticPartitionKey"
                  ],
                  "kind":"Hash"
               },
               "analyticalStorageTtl":-1,
               "conflictResolutionPolicy":{
                  "mode":"LastWriterWins",
                  "conflictResolutionPath":"/_ts"
               }
            },
            "options":{
               "throughput":"400"
            }
         }
      },
      {
         "name":"[concat(variables('cosmos_account_name_mfgdemo'), '/', variables('cosmos_database_name_mfgdemo_manufacturing'), '/', variables('cosmos_database_container_name_htap-hvac'))]",
         "type":"Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
         "apiVersion":"2019-12-12",
         "dependsOn":[
            "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases',variables('cosmos_account_name_mfgdemo'), variables('cosmos_database_name_mfgdemo_manufacturing'))]"
         ],
         "properties":{
            "resource":{
               "id":"[variables('cosmos_database_container_name_htap-hvac')]",
               "indexingPolicy":{
                  "indexingMode":"consistent",
                  "automatic":true,
                  "includedPaths":[
                     {
                        "path":"/*"
                     }
                  ],
                  "excludedPaths":[
                     {
                        "path":"/\"_etag\"/?"
                     }
                  ]
               },
               "partitionKey":{
                  "paths":[
                     "/SyntheticPartitionKey"
                  ],
                  "kind":"Hash"
               },
               "analyticalStorageTtl":-1,
               "conflictResolutionPolicy":{
                  "mode":"LastWriterWins",
                  "conflictResolutionPath":"/_ts"
               }
            },
            "options":{
               "throughput":"400"
            }
         }
      },
      {
         "name":"[concat(variables('cosmos_account_name_mfgdemo'), '/', variables('cosmos_database_name_mfgdemo_manufacturing'), '/', variables('cosmos_database_container_name_manufacturing_analytical_store'))]",
         "type":"Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
         "apiVersion":"2019-12-12",
         "dependsOn":[
            "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases',variables('cosmos_account_name_mfgdemo'), variables('cosmos_database_name_mfgdemo_manufacturing'))]"
         ],
         "properties":{
            "resource":{
               "id":"[variables('cosmos_database_container_name_manufacturing_analytical_store')]",
               "indexingPolicy":{
                  "indexingMode":"consistent",
                  "automatic":true,
                  "includedPaths":[
                     {
                        "path":"/*"
                     }
                  ],
                  "excludedPaths":[
                     {
                        "path":"/\"_etag\"/?"
                     }
                  ]
               },
               "partitionKey":{
                  "paths":[
                     "/SyntheticPartitionKey"
                  ],
                  "kind":"Hash"
               },
               "analyticalStorageTtl":-1,
               "conflictResolutionPolicy":{
                  "mode":"LastWriterWins",
                  "conflictResolutionPath":"/_ts"
               }
            },
            "options":{
               "throughput":"400"
            }
         }
      },
      {
         "name":"[concat(variables('cosmos_account_name_mfgdemo'), '/', variables('cosmos_database_name_mfgdemo_manufacturing'), '/', variables('cosmos_database_container_name_manufacturing_data'))]",
         "type":"Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
         "apiVersion":"2019-12-12",
         "dependsOn":[
            "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases',variables('cosmos_account_name_mfgdemo'), variables('cosmos_database_name_mfgdemo_manufacturing'))]"
         ],
         "properties":{
            "resource":{
               "id":"[variables('cosmos_database_container_name_manufacturing_data')]",
               "indexingPolicy":{
                  "indexingMode":"consistent",
                  "automatic":true,
                  "includedPaths":[
                     {
                        "path":"/*"
                     }
                  ],
                  "excludedPaths":[
                     {
                        "path":"/\"_etag\"/?"
                     }
                  ]
               },
               "partitionKey":{
                  "paths":[
                     "/SyntheticPartitionKey"
                  ],
                  "kind":"Hash"
               },
               "analyticalStorageTtl":-1,
               "conflictResolutionPolicy":{
                  "mode":"LastWriterWins",
                  "conflictResolutionPath":"/_ts"
               }
            },
            "options":{
               "throughput":"400"
            }
         }
      },
      {
         "name":"[concat(variables('cosmos_account_name_mfgdemo'), '/', variables('cosmos_database_name_mfgdemo_manufacturing'), '/', variables('cosmos_database_container_name_mfg_mes_quality'))]",
         "type":"Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
         "apiVersion":"2019-12-12",
         "dependsOn":[
            "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases',variables('cosmos_account_name_mfgdemo'), variables('cosmos_database_name_mfgdemo_manufacturing'))]"
         ],
         "properties":{
            "resource":{
               "id":"[variables('cosmos_database_container_name_mfg_mes_quality')]",
               "indexingPolicy":{
                  "indexingMode":"consistent",
                  "automatic":true,
                  "includedPaths":[
                     {
                        "path":"/*"
                     }
                  ],
                  "excludedPaths":[
                     {
                        "path":"/\"_etag\"/?"
                     }
                  ]
               },
               "partitionKey":{
                  "paths":[
                     "/SyntheticPartitionKey"
                  ],
                  "kind":"Hash"
               },
               "analyticalStorageTtl":-1,
               "conflictResolutionPolicy":{
                  "mode":"LastWriterWins",
                  "conflictResolutionPath":"/_ts"
               }
            },
            "options":{
               "throughput":"400"
            }
         }
      },
      {
         "name":"[concat(variables('cosmos_account_name_mfgdemo'), '/', variables('cosmos_database_name_mfgdemo_manufacturing'), '/', variables('cosmos_database_container_name_mfg_mes_quality1'))]",
         "type":"Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
         "apiVersion":"2019-12-12",
         "dependsOn":[
            "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases',variables('cosmos_account_name_mfgdemo'), variables('cosmos_database_name_mfgdemo_manufacturing'))]"
         ],
         "properties":{
            "resource":{
               "id":"[variables('cosmos_database_container_name_mfg_mes_quality1')]",
               "indexingPolicy":{
                  "indexingMode":"consistent",
                  "automatic":true,
                  "includedPaths":[
                     {
                        "path":"/*"
                     }
                  ],
                  "excludedPaths":[
                     {
                        "path":"/\"_etag\"/?"
                     }
                  ]
               },
               "partitionKey":{
                  "paths":[
                     "/SyntheticPartitionKey"
                  ],
                  "kind":"Hash"
               },
               "analyticalStorageTtl":-1,
               "conflictResolutionPolicy":{
                  "mode":"LastWriterWins",
                  "conflictResolutionPath":"/_ts"
               }
            },
            "options":{
               "throughput":"400"
            }
         }
      },
      {
         "name":"[concat(variables('cosmos_account_name_mfgdemo'), '/', variables('cosmos_database_name_mfgdemo_manufacturing'), '/', variables('cosmos_database_container_name_mfg_quality'))]",
         "type":"Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
         "apiVersion":"2019-12-12",
         "dependsOn":[
            "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases',variables('cosmos_account_name_mfgdemo'), variables('cosmos_database_name_mfgdemo_manufacturing'))]"
         ],
         "properties":{
            "resource":{
               "id":"[variables('cosmos_database_container_name_mfg_quality')]",
               "indexingPolicy":{
                  "indexingMode":"consistent",
                  "automatic":true,
                  "includedPaths":[
                     {
                        "path":"/*"
                     }
                  ],
                  "excludedPaths":[
                     {
                        "path":"/\"_etag\"/?"
                     }
                  ]
               },
               "partitionKey":{
                  "paths":[
                     "/SyntheticPartitionKey"
                  ],
                  "kind":"Hash"
               },
               "analyticalStorageTtl":-1,
               "conflictResolutionPolicy":{
                  "mode":"LastWriterWins",
                  "conflictResolutionPath":"/_ts"
               }
            },
            "options":{
               "throughput":"400"
            }
         }
      },
      {
         "name":"[concat(variables('cosmos_account_name_mfgdemo'), '/', variables('cosmos_database_name_mfgdemo_manufacturing'), '/', variables('cosmos_database_container_name_spark_streaming'))]",
         "type":"Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
         "apiVersion":"2019-12-12",
         "dependsOn":[
            "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases',variables('cosmos_account_name_mfgdemo'), variables('cosmos_database_name_mfgdemo_manufacturing'))]"
         ],
         "properties":{
            "resource":{
               "id":"[variables('cosmos_database_container_name_spark_streaming')]",
               "indexingPolicy":{
                  "indexingMode":"consistent",
                  "automatic":true,
                  "includedPaths":[
                     {
                        "path":"/*"
                     }
                  ],
                  "excludedPaths":[
                     {
                        "path":"/\"_etag\"/?"
                     }
                  ]
               },
               "partitionKey":{
                  "paths":[
                     "/SyntheticPartitionKey"
                  ],
                  "kind":"Hash"
               },
               "analyticalStorageTtl":-1,
               "conflictResolutionPolicy":{
                  "mode":"LastWriterWins",
                  "conflictResolutionPath":"/_ts"
               }
            },
            "options":{
               "throughput":"400"
            }
         }
      },
      {
         "name":"[variables('iot_hub_name_mfgiothub')]",
         "type":"Microsoft.Devices/IotHubs",
         "apiVersion":"2019-03-22",
         "location":"[variables('location')]",
         "sku":{
            "name":"S1",
            "tier":"Standard",
            "capacity":1
         },
         "properties":{
            "eventHubEndpoints":{
               "events":{
                  "retentionTimeInDays":1,
                  "partitionCount":4
               }
            },
            "features":"None"
         }
      },
      {
         "type":"Microsoft.Devices/IotHubs/eventHubEndpoints/ConsumerGroups",
         "apiVersion":"2019-03-22",
         "name":"[concat(variables('iot_hub_name_mfgiothub'), '/events/', variables('iot_hub_consumer_group_mfgiothub'))]",
         "dependsOn":[
            "[concat('Microsoft.Devices/IotHubs/', variables('iot_hub_name_mfgiothub'))]"
         ]
      },
      {
         "name":"[variables('iot_hub_name_mfgIotHubTelemetry')]",
         "type":"Microsoft.Devices/IotHubs",
         "apiVersion":"2019-03-22",
         "location":"[variables('location')]",
         "sku":{
            "name":"S1",
            "tier":"Standard",
            "capacity":1
         },
         "properties":{
            "eventHubEndpoints":{
               "events":{
                  "retentionTimeInDays":1,
                  "partitionCount":4
               }
            },
            "features":"None"
         }
      },
      {
         "type":"Microsoft.Devices/IotHubs/eventHubEndpoints/ConsumerGroups",
         "apiVersion":"2019-03-22",
         "name":"[concat(variables('iot_hub_name_mfgIotHubTelemetry'), '/events/', variables('iot_hub_consumer_group_mfgIotHubTelemetry'))]",
         "dependsOn":[
            "[concat('Microsoft.Devices/IotHubs/', variables('iot_hub_name_mfgIotHubTelemetry'))]"
         ]
      },
      {
         "name":"[variables('iot_hub_name_raceCarIotHub')]",
         "type":"Microsoft.Devices/IotHubs",
         "apiVersion":"2019-03-22",
         "location":"[variables('location')]",
         "sku":{
            "name":"S1",
            "tier":"Standard",
            "capacity":1
         },
         "properties":{
            "eventHubEndpoints":{
               "events":{
                  "retentionTimeInDays":1,
                  "partitionCount":4
               }
            },
            "features":"None"
         }
      },
      {
         "type":"Microsoft.Devices/IotHubs/eventHubEndpoints/ConsumerGroups",
         "apiVersion":"2019-03-22",
         "name":"[concat(variables('iot_hub_name_raceCarIotHub'), '/events/', variables('iot_hub_consumer_group_raceCarIotHub'))]",
         "dependsOn":[
            "[concat('Microsoft.Devices/IotHubs/', variables('iot_hub_name_raceCarIotHub'))]"
         ]
      },
      {
         "name":"[variables('iot_hub_name_mfgiothubCosmosDB')]",
         "type":"Microsoft.Devices/IotHubs",
         "apiVersion":"2019-03-22",
         "location":"[variables('location')]",
         "sku":{
            "name":"S1",
            "tier":"Standard",
            "capacity":1
         },
         "properties":{
            "eventHubEndpoints":{
               "events":{
                  "retentionTimeInDays":1,
                  "partitionCount":4
               }
            },
            "features":"None"
         }
      },
      {
         "type":"Microsoft.Devices/IotHubs/eventHubEndpoints/ConsumerGroups",
         "apiVersion":"2019-03-22",
         "name":"[concat(variables('iot_hub_name_mfgiothubCosmosDB'), '/events/', variables('iot_hub_consumer_group_mfgiothubCosmosDB'))]",
         "dependsOn":[
            "[concat('Microsoft.Devices/IotHubs/', variables('iot_hub_name_mfgiothubCosmosDB'))]"
         ]
      },
      {
         "type":"Microsoft.Storage/storageAccounts",
         "apiVersion":"2019-04-01",
         "name":"[variables('storage_account_name_dreamdemostorageforgen2')]",
         "location":"[variables('location')]",
         "sku":{
            "name":"Standard_LRS"
         },
         "kind":"StorageV2",
         "properties":{
            "accessTier":"Hot",
            "supportsHttpsTrafficOnly":"true",
            "isHnsEnabled":"true",
            "largeFileSharesState":"Disabled"
         },
         "resources":[
            {
               "type":"blobServices/containers",
               "apiVersion":"2018-07-01",
               "name":"[concat('default/', variables('default_data_lake_storage_file_system_name'))]",
               "dependsOn":[
                  "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name_dreamdemostorageforgen2'))]"
               ]
            }
         ]
      },
      {
         "type":"Microsoft.Storage/storageAccounts/blobServices",
         "apiVersion":"2019-06-01",
         "name":"[concat(variables('storage_account_name_dreamdemostorageforgen2'), '/default')]",
         "dependsOn":[
            "[concat('Microsoft.Storage/storageAccounts/', variables('storage_account_name_dreamdemostorageforgen2'))]"
         ],
         "sku":{
            "name":"Standard_LRS",
            "tier":"Standard"
         },
         "properties":{
            "cors":{
               "corsRules":[

               ]
            },
            "deleteRetentionPolicy":{
               "enabled":false
            }
         }
      },
      {
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2019-06-01",
         "name":"[concat(variables('storage_account_name_dreamdemostorageforgen2'), '/default/mfgtelemetry')]",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name_dreamdemostorageforgen2'), 'default')]",
            "[concat('Microsoft.Storage/storageAccounts/', variables('storage_account_name_dreamdemostorageforgen2'))]"
         ],
         "properties":{
            "publicAccess":"None"
         }
      },
      {
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2019-06-01",
         "name":"[concat(variables('storage_account_name_dreamdemostorageforgen2'), '/default/campaigndata')]",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name_dreamdemostorageforgen2'), 'default')]",
            "[concat('Microsoft.Storage/storageAccounts/', variables('storage_account_name_dreamdemostorageforgen2'))]"
         ],
         "properties":{
            "publicAccess":"None"
         }
      },
      {
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2019-06-01",
         "name":"[concat(variables('storage_account_name_dreamdemostorageforgen2'), '/default/mfgoutputs')]",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name_dreamdemostorageforgen2'), 'default')]",
            "[concat('Microsoft.Storage/storageAccounts/', variables('storage_account_name_dreamdemostorageforgen2'))]"
         ],
         "properties":{
            "publicAccess":"None"
         }
      },
      {
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2019-06-01",
         "name":"[concat(variables('storage_account_name_dreamdemostorageforgen2'), '/default/cosmosdb-demo')]",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name_dreamdemostorageforgen2'), 'default')]",
            "[concat('Microsoft.Storage/storageAccounts/', variables('storage_account_name_dreamdemostorageforgen2'))]"
         ],
         "properties":{
            "publicAccess":"None"
         }
      },
      {
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2019-06-01",
         "name":"[concat(variables('storage_account_name_dreamdemostorageforgen2'), '/default/egstage')]",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name_dreamdemostorageforgen2'), 'default')]",
            "[concat('Microsoft.Storage/storageAccounts/', variables('storage_account_name_dreamdemostorageforgen2'))]"
         ],
         "properties":{
            "publicAccess":"None"
         }
      },
      {
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2019-06-01",
         "name":"[concat(variables('storage_account_name_dreamdemostorageforgen2'), '/default/marketingdb-staging')]",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name_dreamdemostorageforgen2'), 'default')]",
            "[concat('Microsoft.Storage/storageAccounts/', variables('storage_account_name_dreamdemostorageforgen2'))]"
         ],
         "properties":{
            "publicAccess":"None"
         }
      },
      {
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2019-06-01",
         "name":"[concat(variables('storage_account_name_dreamdemostorageforgen2'), '/default/mfg-historical-data')]",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name_dreamdemostorageforgen2'), 'default')]",
            "[concat('Microsoft.Storage/storageAccounts/', variables('storage_account_name_dreamdemostorageforgen2'))]"
         ],
         "properties":{
            "publicAccess":"None"
         }
      },
      {
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2019-06-01",
         "name":"[concat(variables('storage_account_name_dreamdemostorageforgen2'), '/default/mfg-iot-data')]",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name_dreamdemostorageforgen2'), 'default')]",
            "[concat('Microsoft.Storage/storageAccounts/', variables('storage_account_name_dreamdemostorageforgen2'))]"
         ],
         "properties":{
            "publicAccess":"None"
         }
      },
      {
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2019-06-01",
         "name":"[concat(variables('storage_account_name_dreamdemostorageforgen2'), '/default/mfgcosmos')]",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name_dreamdemostorageforgen2'), 'default')]",
            "[concat('Microsoft.Storage/storageAccounts/', variables('storage_account_name_dreamdemostorageforgen2'))]"
         ],
         "properties":{
            "publicAccess":"None"
         }
      },
      {
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2019-06-01",
         "name":"[concat(variables('storage_account_name_dreamdemostorageforgen2'), '/default/mfgdemodata')]",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name_dreamdemostorageforgen2'), 'default')]",
            "[concat('Microsoft.Storage/storageAccounts/', variables('storage_account_name_dreamdemostorageforgen2'))]"
         ],
         "properties":{
            "publicAccess":"None"
         }
      },
      {
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2019-06-01",
         "name":"[concat(variables('storage_account_name_dreamdemostorageforgen2'), '/default/mfgtweets')]",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name_dreamdemostorageforgen2'), 'default')]",
            "[concat('Microsoft.Storage/storageAccounts/', variables('storage_account_name_dreamdemostorageforgen2'))]"
         ],
         "properties":{
            "publicAccess":"None"
         }
      },
      {
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2019-06-01",
         "name":"[concat(variables('storage_account_name_dreamdemostorageforgen2'), '/default/nyctlc')]",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name_dreamdemostorageforgen2'), 'default')]",
            "[concat('Microsoft.Storage/storageAccounts/', variables('storage_account_name_dreamdemostorageforgen2'))]"
         ],
         "properties":{
            "publicAccess":"None"
         }
      },
      {
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2019-06-01",
         "name":"[concat(variables('storage_account_name_dreamdemostorageforgen2'), '/default/saphana')]",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name_dreamdemostorageforgen2'), 'default')]",
            "[concat('Microsoft.Storage/storageAccounts/', variables('storage_account_name_dreamdemostorageforgen2'))]"
         ],
         "properties":{
            "publicAccess":"None"
         }
      },
      {
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2019-06-01",
         "name":"[concat(variables('storage_account_name_dreamdemostorageforgen2'), '/default/staging')]",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name_dreamdemostorageforgen2'), 'default')]",
            "[concat('Microsoft.Storage/storageAccounts/', variables('storage_account_name_dreamdemostorageforgen2'))]"
         ],
         "properties":{
            "publicAccess":"None"
         }
      },
      {
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2019-06-01",
         "name":"[concat(variables('storage_account_name_dreamdemostorageforgen2'), '/default/weather')]",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name_dreamdemostorageforgen2'), 'default')]",
            "[concat('Microsoft.Storage/storageAccounts/', variables('storage_account_name_dreamdemostorageforgen2'))]"
         ],
         "properties":{
            "publicAccess":"None"
         }
      },
      {
         "type":"Microsoft.Storage/storageAccounts/fileServices",
         "apiVersion":"2019-06-01",
         "name":"[concat(variables('storage_account_name_dreamdemostorageforgen2'), '/default')]",
         "dependsOn":[
            "[concat('Microsoft.Storage/storageAccounts/', variables('storage_account_name_dreamdemostorageforgen2'))]"
         ],
         "sku":{
            "name":"Standard_LRS",
            "tier":"Standard"
         },
         "properties":{
            "cors":{
               "corsRules":[

               ]
            }
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs",
         "apiVersion":"2019-06-01",
         "name":"[variables('asa_name_mfgasa')]",
         "dependsOn":[
            "[concat('Microsoft.Storage/storageAccounts/', variables('storage_account_name_dreamdemostorageforgen2'))]",
            "[concat('Microsoft.Synapse/workspaces/', variables('workspace_name_dreamdemosynapse'))]"
         ],
         "location":"Central US",
         "identity":{
            "type":"SystemAssigned"
         },
         "properties":{
            "sku":{
               "name":"Standard"
            },
            "eventsOutOfOrderPolicy":"Adjust",
            "outputErrorPolicy":"Stop",
            "eventsOutOfOrderMaxDelayInSeconds":0,
            "eventsLateArrivalMaxDelayInSeconds":5,
            "dataLocale":"en-US"
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs/inputs",
         "apiVersion":"2016-03-01",
         "name":"[concat(variables('asa_name_mfgasa'), '/mfg-iothub-in')]",
         "dependsOn":[
            "[concat('Microsoft.StreamAnalytics/streamingjobs/', variables('asa_name_mfgasa'))]",
            "[concat('Microsoft.Devices/IotHubs/', variables('iot_hub_name_mfgiothub'))]"
         ],
         "properties":{
            "type":"Stream",
            "datasource":{
               "type":"Microsoft.Devices/IotHubs",
               "properties":{
                  "iotHubNamespace":"[variables('iot_hub_name_mfgiothub')]",
                  "sharedAccessPolicyName":"iothubowner",
                  "sharedAccessPolicyKey":"[listKeys(resourceId('Microsoft.Devices/IotHubs', variables('iot_hub_name_mfgiothub')), '2018-04-01').value[0].primaryKey]",
                  "consumerGroupName":"[variables('iot_hub_consumer_group_mfgiothub')]",
                  "endpoint":"messages/events"
               }
            },
            "serialization":{
               "type":"Json",
               "properties":{
                  "encoding":"UTF8"
               }
            }
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs/inputs",
         "apiVersion":"2016-03-01",
         "name":"[concat(variables('asa_name_mfgasa'), '/mfgiothub')]",
         "dependsOn":[
            "[concat('Microsoft.StreamAnalytics/streamingjobs/', variables('asa_name_mfgasa'))]",
            "[concat('Microsoft.Devices/IotHubs/', variables('iot_hub_name_mfgiothub'))]"
         ],
         "properties":{
            "type":"Stream",
            "datasource":{
               "type":"Microsoft.Devices/IotHubs",
               "properties":{
                  "iotHubNamespace":"[variables('iot_hub_name_mfgiothub')]",
                  "sharedAccessPolicyName":"iothubowner",
                  "sharedAccessPolicyKey":"[listKeys(resourceId('Microsoft.Devices/IotHubs', variables('iot_hub_name_mfgiothub')), '2018-04-01').value[0].primaryKey]",
                  "consumerGroupName":"$Default",
                  "endpoint":"messages/events"
               }
            },
            "serialization":{
               "type":"Json",
               "properties":{
                  "encoding":"UTF8"
               }
            }
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs/outputs",
         "apiVersion":"2017-04-01-preview",
         "name":"[concat(variables('asa_name_mfgasa'), '/powerbi-lathe-peck-drill')]",
         "dependsOn":[
            "[concat('Microsoft.StreamAnalytics/streamingjobs/', variables('asa_name_mfgasa'))]"
         ],
         "properties":{
            "datasource":{
               "type":"PowerBI",
               "properties":{
                  "dataset":"lathe-peck-drill-dataset",
                  "table":"machine-streaming-table",
                  "groupId":"[parameters('pbi_workspace_id')]",
                  "authenticationMode":"Msi"
               }
            }
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs/outputs",
         "apiVersion":"2017-04-01-preview",
         "name":"[concat(variables('asa_name_mfgasa'), '/powerbi-lathe-thread-out')]",
         "dependsOn":[
            "[concat('Microsoft.StreamAnalytics/streamingjobs/', variables('asa_name_mfgasa'))]"
         ],
         "properties":{
            "datasource":{
               "type":"PowerBI",
               "properties":{
                  "dataset":"lathe-thread-out-dataset",
                  "table":"machine-data",
                  "groupId":"[parameters('pbi_workspace_id')]",
                  "authenticationMode":"Msi"
               }
            }
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs/outputs",
         "apiVersion":"2017-04-01-preview",
         "name":"[concat(variables('asa_name_mfgasa'), '/powerbi-milling-canning')]",
         "dependsOn":[
            "[concat('Microsoft.StreamAnalytics/streamingjobs/', variables('asa_name_mfgasa'))]"
         ],
         "properties":{
            "datasource":{
               "type":"PowerBI",
               "properties":{
                  "dataset":"milling-canning",
                  "table":"machine-data",
                  "groupId":"[parameters('pbi_workspace_id')]",
                  "authenticationMode":"Msi"
               }
            }
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs/outputs",
         "apiVersion":"2017-04-01-preview",
         "name":"[concat(variables('asa_name_mfgasa'), '/synapse-lathe-peck-drill')]",
         "dependsOn":[
            "[concat('Microsoft.StreamAnalytics/streamingjobs/', variables('asa_name_mfgasa'))]"
         ],
         "properties":{
            "datasource":{
               "type":"Microsoft.Sql/Server/Database",
               "properties":{
                  "server":"[concat(variables('workspace_name_dreamdemosynapse'),'.database.windows.net')]",
                  "database":"[variables('sql_compute_name')]",
                  "user":"[variables('sql_administrator_login_id')]",
                  "password":"[parameters('sql_administrator_login_password')]",
                  "table":"mfg-iot-lathe-peck-drill"
               }
            }
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs/outputs",
         "apiVersion":"2017-04-01-preview",
         "name":"[concat(variables('asa_name_mfgasa'), '/synapse-lathe-thread-cut')]",
         "dependsOn":[
            "[concat('Microsoft.StreamAnalytics/streamingjobs/', variables('asa_name_mfgasa'))]"
         ],
         "properties":{
            "datasource":{
               "type":"Microsoft.Sql/Server/Database",
               "properties":{
                  "server":"[concat(variables('workspace_name_dreamdemosynapse'),'.database.windows.net')]",
                  "database":"[variables('sql_compute_name')]",
                  "user":"[variables('sql_administrator_login_id')]",
                  "password":"[parameters('sql_administrator_login_password')]",
                  "table":"mfg-iot-lathe-thread-cut"
               }
            }
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs/outputs",
         "apiVersion":"2017-04-01-preview",
         "name":"[concat(variables('asa_name_mfgasa'), '/synapse-mfgiotmillingcanning')]",
         "dependsOn":[
            "[concat('Microsoft.StreamAnalytics/streamingjobs/', variables('asa_name_mfgasa'))]"
         ],
         "properties":{
            "datasource":{
               "type":"Microsoft.Sql/Server/Database",
               "properties":{
                  "server":"[concat(variables('workspace_name_dreamdemosynapse'),'.database.windows.net')]",
                  "database":"[variables('sql_compute_name')]",
                  "user":"[variables('sql_administrator_login_id')]",
                  "password":"[parameters('sql_administrator_login_password')]",
                  "table":"mfgiotmillingcanning"
               }
            }
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs/outputs",
         "apiVersion":"2017-04-01-preview",
         "name":"[concat(variables('asa_name_mfgasa'), '/synapse-milling-canning')]",
         "dependsOn":[
            "[concat('Microsoft.StreamAnalytics/streamingjobs/', variables('asa_name_mfgasa'))]"
         ],
         "properties":{
            "datasource":{
               "type":"Microsoft.Sql/Server/Database",
               "properties":{
                  "server":"[concat(variables('workspace_name_dreamdemosynapse'),'.database.windows.net')]",
                  "database":"[variables('sql_compute_name')]",
                  "user":"[variables('sql_administrator_login_id')]",
                  "password":"[parameters('sql_administrator_login_password')]",
                  "table":"mfg-iot-milling-canning"
               }
            }
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs/outputs",
         "apiVersion":"2017-04-01-preview",
         "name":"[concat(variables('asa_name_mfgasa'), '/storage-lathe-peck-drill')]",
         "dependsOn":[
            "[concat('Microsoft.StreamAnalytics/streamingjobs/', variables('asa_name_mfgasa'))]"
         ],
         "properties":{
            "datasource":{
               "type":"Microsoft.Storage/Blob",
               "properties":{
                  "storageAccounts":[
                     {
                        "accountName":"[variables('storage_account_name_dreamdemostorageforgen2')]",
                        "accountKey":"[listKeys(resourceId('Microsoft.Storage/storageAccounts',variables('storage_account_name_dreamdemostorageforgen2')),'2019-04-01').keys[0].value]"
                     }
                  ],
                  "container":"mfgoutputs",
                  "pathPattern":"iot-lathe-peck-drill/{datetime:yyyy}/{datetime:MM}/{datetime:dd}/"
               }
            },
            "serialization":{
               "type":"Json",
               "properties":{
                  "encoding":"UTF8"
               }
            }
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs/outputs",
         "apiVersion":"2017-04-01-preview",
         "name":"[concat(variables('asa_name_mfgasa'), '/storage-lathe-thread-cut')]",
         "dependsOn":[
            "[concat('Microsoft.StreamAnalytics/streamingjobs/', variables('asa_name_mfgasa'))]"
         ],
         "properties":{
            "datasource":{
               "type":"Microsoft.Storage/Blob",
               "properties":{
                  "storageAccounts":[
                     {
                        "accountName":"[variables('storage_account_name_dreamdemostorageforgen2')]",
                        "accountKey":"[listKeys(resourceId('Microsoft.Storage/storageAccounts',variables('storage_account_name_dreamdemostorageforgen2')),'2019-04-01').keys[0].value]"
                     }
                  ],
                  "container":"mfgoutputs",
                  "pathPattern":"iot-lathe-thread-cut/{datetime:yyyy}/{datetime:MM}/{datetime:dd}/"
               }
            },
            "serialization":{
               "type":"Json",
               "properties":{
                  "encoding":"UTF8"
               }
            }
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs/outputs",
         "apiVersion":"2017-04-01-preview",
         "name":"[concat(variables('asa_name_mfgasa'), '/storage-milling-canning')]",
         "dependsOn":[
            "[concat('Microsoft.StreamAnalytics/streamingjobs/', variables('asa_name_mfgasa'))]"
         ],
         "properties":{
            "datasource":{
               "type":"Microsoft.Storage/Blob",
               "properties":{
                  "storageAccounts":[
                     {
                        "accountName":"[variables('storage_account_name_dreamdemostorageforgen2')]",
                        "accountKey":"[listKeys(resourceId('Microsoft.Storage/storageAccounts',variables('storage_account_name_dreamdemostorageforgen2')),'2019-04-01').keys[0].value]"
                     }
                  ],
                  "container":"mfgoutputs",
                  "pathPattern":"iot-milling-canning/{datetime:yyyy}/{datetime:MM}/{datetime:dd}/"
               }
            },
            "serialization":{
               "type":"Json",
               "properties":{
                  "encoding":"UTF8"
               }
            }
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs/outputs",
         "apiVersion":"2017-04-01-preview",
         "name":"[concat(variables('asa_name_mfgasa'), '/function-synapse-d365')]",
         "dependsOn":[
            "[concat('Microsoft.StreamAnalytics/streamingjobs/', variables('asa_name_mfgasa'))]"
         ],
         "properties":{
            "datasource":{
               "type":"Microsoft.AzureFunction",
               "properties":{
                  "functionAppName":"[variables('azure_function_functions_app_name')]",
                  "functionName":"function-synapse-d365",
                  "apiKey":"test"
               }
            }
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs/transformations",
         "apiVersion":"2016-03-01",
         "name":"[concat(variables('asa_name_mfgasa'), '/query')]",
         "dependsOn":[
            "[concat('Microsoft.StreamAnalytics/streamingjobs/', variables('asa_name_mfgasa'))]"
         ],
         "properties":{
            "streamingUnits":6,
            "query":"[variables('asa_query_mfgasa')]"
         }
      },
      {
         "name":"[concat(variables('asa_name_mfgasa'), '/removeIoTHubField')]",
         "type":"Microsoft.StreamAnalytics/streamingjobs/functions",
         "apiVersion":"2016-03-01",
         "dependsOn":[
            "[concat('Microsoft.StreamAnalytics/streamingjobs/', variables('asa_name_mfgasa'))]"
         ],
         "properties":{
            "type":"Scalar",
            "properties":{
               "inputs":[
                  {
                     "dataType":"record"
                  }
               ],
               "output":{
                  "dataType":"record"
               },
               "binding":{
                  "type":"Microsoft.StreamAnalytics/JavascriptUdf",
                  "properties":{
                     "script":"function main(input) { delete input[\"IoTHub\"]; return input; }"
                  }
               }
            }
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs",
         "apiVersion":"2019-06-01",
         "name":"[variables('asa_name_mfgasaCosmosDB')]",
         "dependsOn":[
            "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases',variables('cosmos_account_name_manufacturingdemo'), variables('cosmos_database_name_mfgdemo_industrial'))]",
            "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases',variables('cosmos_account_name_mfgdemo'), variables('cosmos_database_name_mfgdemo_industrial'))]",
            "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases',variables('cosmos_account_name_mfgdemo'), variables('cosmos_database_name_mfgdemo_manufacturing'))]"
         ],
         "location":"Central US",
         "identity":{
            "type":"SystemAssigned"
         },
         "properties":{
            "sku":{
               "name":"Standard"
            },
            "eventsOutOfOrderPolicy":"Adjust",
            "outputErrorPolicy":"Stop",
            "eventsOutOfOrderMaxDelayInSeconds":0,
            "eventsLateArrivalMaxDelayInSeconds":5,
            "dataLocale":"en-US"
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs/inputs",
         "apiVersion":"2016-03-01",
         "name":"[concat(variables('asa_name_mfgasaCosmosDB'), '/mfgasaCosmosDB')]",
         "dependsOn":[
            "[concat('Microsoft.StreamAnalytics/streamingjobs/', variables('asa_name_mfgasaCosmosDB'))]",
            "[concat('Microsoft.Devices/IotHubs/', variables('iot_hub_name_mfgiothubCosmosDB'))]"
         ],
         "properties":{
            "type":"Stream",
            "datasource":{
               "type":"Microsoft.Devices/IotHubs",
               "properties":{
                  "iotHubNamespace":"[variables('iot_hub_name_mfgiothubCosmosDB')]",
                  "sharedAccessPolicyName":"iothubowner",
                  "sharedAccessPolicyKey":"[listKeys(resourceId('Microsoft.Devices/IotHubs', variables('iot_hub_name_mfgiothubCosmosDB')), '2018-04-01').value[0].primaryKey]",
                  "consumerGroupName":"$Default",
                  "endpoint":"messages/events"
               }
            },
            "serialization":{
               "type":"Json",
               "properties":{
                  "encoding":"UTF8"
               }
            }
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs/outputs",
         "apiVersion":"2017-04-01-preview",
         "name":"[concat(variables('asa_name_mfgasaCosmosDB'), '/cosmosdboutput')]",
         "dependsOn":[
            "[concat('Microsoft.StreamAnalytics/streamingjobs/', variables('asa_name_mfgasaCosmosDB'))]"
         ],
         "properties":{
            "datasource":{
               "type":"Microsoft.Storage/DocumentDB",
               "properties":{
                  "accountId":"[variables('cosmos_account_name_mfgdemo')]",
                  "accountKey":"[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmos_account_name_mfgdemo')), providers('Microsoft.DocumentDB', 'databaseAccounts').apiVersions[0]).primaryMasterKey]",
                  "database":"[variables('cosmos_database_name_mfgdemo_manufacturing')]",
                  "collectionNamePattern":"[variables('cosmos_database_container_name_manufacturing_data')]"
               }
            }
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs/outputs",
         "apiVersion":"2017-04-01-preview",
         "name":"[concat(variables('asa_name_mfgasaCosmosDB'), '/CosmosdboutputNoHTAP')]",
         "dependsOn":[
            "[concat('Microsoft.StreamAnalytics/streamingjobs/', variables('asa_name_mfgasaCosmosDB'))]"
         ],
         "properties":{
            "datasource":{
               "type":"Microsoft.Storage/DocumentDB",
               "properties":{
                  "accountId":"[variables('cosmos_account_name_manufacturingdemo')]",
                  "accountKey":"[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmos_account_name_manufacturingdemo')), providers('Microsoft.DocumentDB', 'databaseAccounts').apiVersions[0]).primaryMasterKey]",
                  "database":"[variables('cosmos_database_name_manufacturingdemo_industrial')]",
                  "collectionNamePattern":"[variables('cosmos_database_container_name_historical_data_adf')]"
               }
            }
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs/transformations",
         "apiVersion":"2016-03-01",
         "name":"[concat(variables('asa_name_mfgasaCosmosDB'), '/query')]",
         "dependsOn":[
            "[concat('Microsoft.StreamAnalytics/streamingjobs/', variables('asa_name_mfgasaCosmosDB'))]"
         ],
         "properties":{
            "streamingUnits":6,
            "query":"[variables('asa_query_mfgasaCosmosDB')]"
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs",
         "apiVersion":"2019-06-01",
         "name":"[variables('asa_name_mfgASATelemetry')]",
         "dependsOn":[
            "[concat('Microsoft.Storage/storageAccounts/', variables('storage_account_name_dreamdemostorageforgen2'))]"
         ],
         "location":"Central US",
         "identity":{
            "type":"SystemAssigned"
         },
         "properties":{
            "sku":{
               "name":"Standard"
            },
            "eventsOutOfOrderPolicy":"Adjust",
            "outputErrorPolicy":"Stop",
            "eventsOutOfOrderMaxDelayInSeconds":0,
            "eventsLateArrivalMaxDelayInSeconds":5,
            "dataLocale":"en-US"
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs/inputs",
         "apiVersion":"2016-03-01",
         "name":"[concat(variables('asa_name_mfgASATelemetry'), '/mfgIoTHubTelemetry-in')]",
         "dependsOn":[
            "[concat('Microsoft.StreamAnalytics/streamingjobs/', variables('asa_name_mfgASATelemetry'))]",
            "[concat('Microsoft.Devices/IotHubs/', variables('iot_hub_name_mfgIotHubTelemetry'))]"
         ],
         "properties":{
            "type":"Stream",
            "datasource":{
               "type":"Microsoft.Devices/IotHubs",
               "properties":{
                  "iotHubNamespace":"[variables('iot_hub_name_mfgIotHubTelemetry')]",
                  "sharedAccessPolicyName":"iothubowner",
                  "sharedAccessPolicyKey":"[listKeys(resourceId('Microsoft.Devices/IotHubs', variables('iot_hub_name_mfgIotHubTelemetry')), '2018-04-01').value[0].primaryKey]",
                  "consumerGroupName":"[variables('iot_hub_consumer_group_mfgIotHubTelemetry')]",
                  "endpoint":"messages/events"
               }
            },
            "serialization":{
               "type":"Json",
               "properties":{
                  "encoding":"UTF8"
               }
            }
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs/outputs",
         "apiVersion":"2017-04-01-preview",
         "name":"[concat(variables('asa_name_mfgASATelemetry'), '/mfgStorageTelemetry-out')]",
         "dependsOn":[
            "[concat('Microsoft.StreamAnalytics/streamingjobs/', variables('asa_name_mfgASATelemetry'))]"
         ],
         "properties":{
            "datasource":{
               "type":"Microsoft.Storage/Blob",
               "properties":{
                  "storageAccounts":[
                     {
                        "accountName":"[variables('storage_account_name_dreamdemostorageforgen2')]",
                        "accountKey":"[listKeys(resourceId('Microsoft.Storage/storageAccounts',variables('storage_account_name_dreamdemostorageforgen2')),'2019-04-01').keys[0].value]"
                     }
                  ],
                  "container":"mfgtelemetry",
                  "pathPattern":"/{datetime:yyyy}/{datetime:MM}/{datetime:dd}/"
               }
            },
            "serialization":{
               "type":"Json",
               "properties":{
                  "encoding":"UTF8"
               }
            }
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs/transformations",
         "apiVersion":"2016-03-01",
         "name":"[concat(variables('asa_name_mfgASATelemetry'), '/query')]",
         "dependsOn":[
            "[concat('Microsoft.StreamAnalytics/streamingjobs/', variables('asa_name_mfgASATelemetry'))]"
         ],
         "properties":{
            "streamingUnits":6,
            "query":"[variables('asa_query_mfgASATelemetry')]"
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs",
         "apiVersion":"2019-06-01",
         "name":"[variables('asa_name_race_car_asa')]",
         "location":"Central US",
         "identity":{
            "type":"SystemAssigned"
         },
         "properties":{
            "sku":{
               "name":"Standard"
            },
            "eventsOutOfOrderPolicy":"Adjust",
            "outputErrorPolicy":"Stop",
            "eventsOutOfOrderMaxDelayInSeconds":0,
            "eventsLateArrivalMaxDelayInSeconds":5,
            "dataLocale":"en-US"
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs/inputs",
         "apiVersion":"2016-03-01",
         "name":"[concat(variables('asa_name_race_car_asa'), '/','race-car')]",
         "dependsOn":[
            "[concat('Microsoft.StreamAnalytics/streamingjobs/', variables('asa_name_race_car_asa'))]",
            "[concat('Microsoft.Devices/IotHubs/', variables('iot_hub_name_raceCarIotHub'))]"
         ],
         "properties":{
            "type":"Stream",
            "datasource":{
               "type":"Microsoft.Devices/IotHubs",
               "properties":{
                  "iotHubNamespace":"[variables('iot_hub_name_raceCarIotHub')]",
                  "sharedAccessPolicyName":"iothubowner",
                  "sharedAccessPolicyKey":"[listKeys(resourceId('Microsoft.Devices/IotHubs', variables('iot_hub_name_raceCarIotHub')), '2018-04-01').value[0].primaryKey]",
                  "consumerGroupName":"$Default",
                  "endpoint":"messages/events"
               }
            },
            "serialization":{
               "type":"Json",
               "properties":{
                  "encoding":"UTF8"
               }
            }
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs/outputs",
         "apiVersion":"2017-04-01-preview",
         "name":"[concat(variables('asa_name_race_car_asa'), '/power-bi')]",
         "dependsOn":[
            "[concat('Microsoft.StreamAnalytics/streamingjobs/', variables('asa_name_race_car_asa'))]"
         ],
         "properties":{
            "datasource":{
               "type":"PowerBI",
               "properties":{
                  "dataset":"Racing Cars",
                  "table":"race-cars",
                  "groupId":"[parameters('pbi_workspace_id')]",
                  "authenticationMode":"Msi"
               }
            }
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs/transformations",
         "apiVersion":"2016-03-01",
         "name":"[concat(variables('asa_name_race_car_asa'), '/query')]",
         "dependsOn":[
            "[concat('Microsoft.StreamAnalytics/streamingjobs/', variables('asa_name_race_car_asa'))]"
         ],
         "properties":{
            "streamingUnits":6,
            "query":"[variables('asa_query_race_car_asa')]"
         }
      },
      {
         "type":"Microsoft.Storage/storageAccounts",
         "apiVersion":"2019-04-01",
         "name":"[variables('storage_account_name_manufacturingdemo12')]",
         "location":"[variables('location')]",
         "sku":{
            "name":"Standard_LRS"
         },
         "kind":"StorageV2",
         "properties":{
            "accessTier":"Hot",
            "supportsHttpsTrafficOnly":"true",
            "isHnsEnabled":"true",
            "largeFileSharesState":"Disabled"
         },
         "resources":[
            {
               "type":"blobServices/containers",
               "apiVersion":"2018-07-01",
               "name":"[concat('default/data')]",
               "dependsOn":[
                  "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name_manufacturingdemo12'))]"
               ]
            }
         ]
      },
      {
         "type":"Microsoft.Storage/storageAccounts/blobServices",
         "apiVersion":"2019-06-01",
         "name":"[concat(variables('storage_account_name_manufacturingdemo12'), '/default')]",
         "dependsOn":[
            "[concat('Microsoft.Storage/storageAccounts/', variables('storage_account_name_manufacturingdemo12'))]"
         ],
         "sku":{
            "name":"Standard_LRS",
            "tier":"Standard"
         },
         "properties":{
            "cors":{
               "corsRules":[

               ]
            },
            "deleteRetentionPolicy":{
               "enabled":false
            }
         }
      },
      {
         "type":"Microsoft.Storage/storageAccounts/fileServices",
         "apiVersion":"2019-06-01",
         "name":"[concat(variables('storage_account_name_manufacturingdemo12'), '/default')]",
         "dependsOn":[
            "[concat('Microsoft.Storage/storageAccounts/', variables('storage_account_name_manufacturingdemo12'))]"
         ],
         "sku":{
            "name":"Standard_LRS",
            "tier":"Standard"
         },
         "properties":{
            "cors":{
               "corsRules":[

               ]
            }
         }
      },
      {
         "type":"Microsoft.Storage/storageAccounts",
         "apiVersion":"2019-04-01",
         "name":"[variables('storage_account_name_manufacturingdemoassets')]",
         "location":"[variables('location')]",
         "sku":{
            "name":"Standard_LRS"
         },
         "kind":"StorageV2",
         "properties":{
            "accessTier":"Hot",
            "supportsHttpsTrafficOnly":"true",
            "isHnsEnabled":"true",
            "largeFileSharesState":"Disabled"
         },
         "resources":[
            {
               "type":"blobServices/containers",
               "apiVersion":"2018-07-01",
               "name":"[concat('default/data')]",
               "dependsOn":[
                  "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name_manufacturingdemoassets'))]"
               ]
            }
         ]
      },
      {
         "type":"Microsoft.Storage/storageAccounts/blobServices",
         "apiVersion":"2019-06-01",
         "name":"[concat(variables('storage_account_name_manufacturingdemoassets'), '/default')]",
         "dependsOn":[
            "[concat('Microsoft.Storage/storageAccounts/', variables('storage_account_name_manufacturingdemoassets'))]"
         ],
         "sku":{
            "name":"Standard_LRS",
            "tier":"Standard"
         },
         "properties":{
            "cors":{
               "corsRules":[

               ]
            },
            "deleteRetentionPolicy":{
               "enabled":false
            }
         }
      },
      {
         "type":"Microsoft.Storage/storageAccounts/fileServices",
         "apiVersion":"2019-06-01",
         "name":"[concat(variables('storage_account_name_manufacturingdemoassets'), '/default')]",
         "dependsOn":[
            "[concat('Microsoft.Storage/storageAccounts/', variables('storage_account_name_manufacturingdemoassets'))]"
         ],
         "sku":{
            "name":"Standard_LRS",
            "tier":"Standard"
         },
         "properties":{
            "cors":{
               "corsRules":[

               ]
            }
         }
      },
      {
         "type":"Microsoft.Storage/storageAccounts",
         "apiVersion":"2019-04-01",
         "name":"[variables('storage_account_name_manufacturingwebstaging')]",
         "location":"[variables('location')]",
         "sku":{
            "name":"Standard_LRS"
         },
         "kind":"StorageV2",
         "properties":{
            "accessTier":"Hot",
            "supportsHttpsTrafficOnly":"true",
            "isHnsEnabled":"true",
            "largeFileSharesState":"Disabled"
         },
         "resources":[
            {
               "type":"blobServices/containers",
               "apiVersion":"2018-07-01",
               "name":"[concat('default/data')]",
               "dependsOn":[
                  "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name_manufacturingwebstaging'))]"
               ]
            }
         ]
      },
      {
         "type":"Microsoft.Storage/storageAccounts/blobServices",
         "apiVersion":"2019-06-01",
         "name":"[concat(variables('storage_account_name_manufacturingwebstaging'), '/default')]",
         "dependsOn":[
            "[concat('Microsoft.Storage/storageAccounts/', variables('storage_account_name_manufacturingwebstaging'))]"
         ],
         "sku":{
            "name":"Standard_LRS",
            "tier":"Standard"
         },
         "properties":{
            "cors":{
               "corsRules":[

               ]
            },
            "deleteRetentionPolicy":{
               "enabled":false
            }
         }
      },
      {
         "type":"Microsoft.Storage/storageAccounts/fileServices",
         "apiVersion":"2019-06-01",
         "name":"[concat(variables('storage_account_name_manufacturingwebstaging'), '/default')]",
         "dependsOn":[
            "[concat('Microsoft.Storage/storageAccounts/', variables('storage_account_name_manufacturingwebstaging'))]"
         ],
         "sku":{
            "name":"Standard_LRS",
            "tier":"Standard"
         },
         "properties":{
            "cors":{
               "corsRules":[

               ]
            }
         }
      },
      {
         "name":"[variables('virtual_machine_vnet_name')]",
         "type":"Microsoft.Network/virtualNetworks",
         "apiVersion":"2019-11-01",
         "location":"[variables('location')]",
         "properties":{
            "addressSpace":{
               "addressPrefixes":[
                  "[variables('virtual_machine_vnet_address_prefix')]"
               ]
            },
            "subnets":[
               {
                  "name":"[variables('virtual_machine_vnet_subnet_name')]",
                  "properties":{
                     "addressPrefix":"[variables('virtual_machine_vnet_address_prefix')]"
                  }
               }
            ]
         }
      },
      {
         "name":"[variables('virtual_machine_public_ip_name')]",
         "type":"Microsoft.Network/publicIPAddresses",
         "apiVersion":"2019-04-01",
         "location":"[variables('location')]",
         "sku":{
            "name":"Basic"
         },
         "properties":{
            "publicIPAllocationMethod":"Static",
            "publicIPAddressVersion":"IPv4",
            "dnsSettings":{
               "domainNameLabel":"[variables('virtual_machine_name')]"
            }
         }
      },
      {
         "name":"[variables('virtual_machine_nsg_name')]",
         "type":"Microsoft.Network/networkSecurityGroups",
         "apiVersion":"2019-11-01",
         "location":"[variables('location')]",
         "properties":{
            "securityRules":[
               {
                  "name":"default-allow-3389",
                  "properties":{
                     "priority":1000,
                     "access":"Allow",
                     "direction":"Inbound",
                     "destinationPortRange":"3389",
                     "protocol":"Tcp",
                     "sourcePortRange":"*",
                     "sourceAddressPrefix":"*",
                     "destinationAddressPrefix":"*"
                  }
               }
            ]
         }
      },
      {
         "name":"[variables('virtual_machine_nic_name')]",
         "type":"Microsoft.Network/networkInterfaces",
         "apiVersion":"2019-11-01",
         "location":"[variables('location')]",
         "dependsOn":[
            "[concat('Microsoft.Network/virtualNetworks/', variables('virtual_machine_vnet_name'))]",
            "[concat('Microsoft.Network/publicIPAddresses/', variables('virtual_machine_public_ip_name'))]",
            "[concat('Microsoft.Network/networkSecurityGroups/', variables('virtual_machine_nsg_name'))]"
         ],
         "properties":{
            "ipConfigurations":[
               {
                  "name":"ipconfig1",
                  "properties":{
                     "privateIPAllocationMethod":"Dynamic",
                     "publicIPAddress":{
                        "id":"[resourceId('Microsoft.Network/publicIPAddresses', variables('virtual_machine_public_ip_name'))]"
                     },
                     "subnet":{
                        "id":"[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtual_machine_vnet_name'), variables('virtual_machine_vnet_subnet_name'))]"
                     },
                     "primary":true,
                     "privateIPAddressVersion":"IPv4"
                  }
               }
            ],
            "networkSecurityGroup":{
               "id":"[resourceId('Microsoft.Network/networkSecurityGroups', variables('virtual_machine_nsg_name'))]"
            }
         }
      },
      {
         "name":"[variables('virtual_machine_name')]",
         "type":"Microsoft.Compute/virtualMachines",
         "apiVersion":"2019-07-01",
         "location":"[variables('location')]",
         "dependsOn":[
            "[concat('Microsoft.Network/networkInterfaces/', variables('virtual_machine_nic_name'))]",
            "[concat('Microsoft.Devices/IotHubs/', variables('iot_hub_name_raceCarIotHub'))]",
            "[concat('Microsoft.Devices/IotHubs/', variables('iot_hub_name_mfgIotHubTelemetry'))]",
            "[concat('Microsoft.Devices/IotHubs/', variables('iot_hub_name_mfgiothub'))]",
            "[concat('Microsoft.Devices/IotHubs/', variables('iot_hub_name_mfgiothubCosmosDB'))]",
            "[concat('Microsoft.StreamAnalytics/streamingjobs/', variables('asa_name_mfgasa'))]",
            "[concat('Microsoft.StreamAnalytics/streamingjobs/', variables('asa_name_mfgASATelemetry'))]",
            "[concat('Microsoft.StreamAnalytics/streamingjobs/', variables('asa_name_mfgasaCosmosDB'))]",
            "[concat('Microsoft.StreamAnalytics/streamingjobs/', variables('asa_name_race_car_asa'))]",
            "[concat('Microsoft.Storage/storageAccounts/', variables('storage_account_name_dreamdemostorageforgen2'))]",
            "[concat('Microsoft.Web/sites/', toLower(variables('cdp_vision_app_service_name')))]",
            "[concat('Microsoft.Web/sites/', toLower(variables('manufacturing_demo_ecommerce_app_service_name')))]",
            "[concat('Microsoft.Web/sites/', toLower(variables('car_telemetry_app_service_name')))]",
            "[concat('Microsoft.Web/sites/', toLower(variables('data_gen_telemetry_app_service_name')))]",
            "[concat('Microsoft.Web/sites/', toLower(variables('sendtohub_telemetry_app_service_name')))]",
            "[concat('Microsoft.Web/sites/', toLower(variables('sku2_telemetry_app_service_name')))]"
         ],
         "properties":{
            "hardwareProfile":{
               "vmSize":"[variables('virtual_machine_size')]"
            },
            "osProfile":{
               "computerName":"[variables('virtual_machine_name')]",
               "adminUsername":"[variables('virtual_machine_username')]",
               "adminPassword":"[variables('virtual_machine_password')]"
            },
            "storageProfile":{
               "imageReference":{
                  "publisher":"MicrosoftWindowsServer",
                  "offer":"WindowsServer",
                  "sku":"2016-Datacenter",
                  "version":"latest"
               },
               "osDisk":{
                  "createOption":"FromImage"
               }
            },
            "networkProfile":{
               "networkInterfaces":[
                  {
                     "id":"[resourceId('Microsoft.Network/networkInterfaces', variables('virtual_machine_nic_name'))]"
                  }
               ]
            },
            "diagnosticsProfile":{
               "bootDiagnostics":{
                  "enabled":false
               }
            }
         },
         "identity":{
            "type":"SystemAssigned"
         }
      },
      {
         "name":"[concat(variables('virtual_machine_name'),'/ManagedIdentityExtensionForWindows')]",
         "type":"Microsoft.Compute/virtualMachines/extensions",
         "apiVersion":"2018-06-01",
         "location":"[variables('location')]",
         "dependsOn":[
            "[concat('Microsoft.Compute/virtualMachines/', variables('virtual_machine_name'))]"
         ],
         "properties":{
            "publisher":"Microsoft.ManagedIdentity",
            "type":"ManagedIdentityExtensionForWindows",
            "typeHandlerVersion":"1.0",
            "autoUpgradeMinorVersion":true,
            "settings":{
               "port":50342
            }
         }
      },
      {
         "name":"[guid(variables('virtual_machine_name'))]",
         "type":"Microsoft.Authorization/roleAssignments",
         "apiVersion":"2020-03-01-preview",
         "dependsOn":[
            "[concat('Microsoft.Compute/virtualMachines/', variables('virtual_machine_name'))]"
         ],
         "properties":{
            "roleDefinitionId":"[variables('rbac_guid_owner')]",
            "principalId":"[reference(resourceId('Microsoft.Compute/virtualMachines', variables('virtual_machine_name')), '2019-07-01', 'Full').identity.principalId]",
            "scope":"[resourceGroup().id]"
         }
      },
      {
         "name":"[concat(variables('virtual_machine_name'),'/installcustomscript')]",
         "type":"Microsoft.Compute/virtualMachines/extensions",
         "apiVersion":"2019-07-01",
         "location":"[variables('location')]",
         "dependsOn":[
            "[concat('Microsoft.Compute/virtualMachines/', variables('virtual_machine_name'))]"
         ],
         "properties":{
            "publisher":"Microsoft.Compute",
            "type":"CustomScriptExtension",
            "typeHandlerVersion":"1.8",
            "autoUpgradeMinorVersion":true,
            "settings":{
               "fileUris":[
                  "[variables('powershell_pre_script_setup_path')]",
                  "[variables('powershell_pre_script_path')]"
               ]
            },
            "protectedSettings":{
               "commandToExecute":"[concat('powershell -ExecutionPolicy Unrestricted -File gitinstall.ps1 ', variables('script_args'))]"
            }
         }
      },
      {
         "type":"Microsoft.Synapse/workspaces",
         "apiVersion":"2019-06-01-preview",
         "name":"[variables('workspace_name_dreamdemosynapse')]",
         "location":"[variables('location')]",
         "dependsOn":[
            "[concat('Microsoft.Storage/storageAccounts/', variables('storage_account_name_dreamdemostorageforgen2'), '/blobServices/default/containers/', variables('default_data_lake_storage_file_system_name'))]"
         ],
         "identity":{
            "type":"SystemAssigned"
         },
         "properties":{
            "defaultDataLakeStorage":{
               "accountUrl":"[variables('default_data_lake_storage_account_url')]",
               "filesystem":"[variables('default_data_lake_storage_file_system_name')]"
            },
            "sqlAdministratorLogin":"[variables('sql_administrator_login_id')]",
            "sqlAdministratorLoginPassword":"[parameters('sql_administrator_login_password')]"
         },
         "resources":[
            {
               "type":"firewallrules",
               "apiVersion":"2019-06-01-preview",
               "name":"allowAll",
               "location":"[variables('location')]",
               "dependsOn":[
                  "[concat('Microsoft.Synapse/workspaces/', variables('workspace_name_dreamdemosynapse'))]"
               ],
               "properties":{
                  "startIpAddress":"0.0.0.0",
                  "endIpAddress":"255.255.255.255"
               }
            }
         ]
      },
      {
         "type":"Microsoft.Synapse/workspaces/bigDataPools",
         "apiVersion":"2019-06-01-preview",
         "name":"[concat(variables('workspace_name_dreamdemosynapse'), '/', variables('spark_compute_name'))]",
         "location":"[variables('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.Synapse/workspaces', variables('workspace_name_dreamdemosynapse'))]"
         ],
         "properties":{
            "nodeCount":"[variables('spark_node_count')]",
            "nodeSizeFamily":"[variables('spark_node_size_family')]",
            "nodeSize":"[variables('spark_node_size')]",
            "autoScale":{
               "enabled":"[variables('spark_auto_scale_enabled')]",
               "minNodeCount":"[variables('spark_min_node_count')]",
               "maxNodeCount":"[variables('spark_max_node_count')]"
            },
            "autoPause":{
               "enabled":"[variables('spark_auto_pause_enabled')]",
               "delayInMinutes":"[variables('spark_auto_pause_delay_in_minutes')]"
            },
            "sparkVersion":"[variables('spark_version')]",
            "libraryRequirements":{
               "filename":"[variables('packages_requirements_file_name')]",
               "content":"[variables('packages_requirements_content')]"
            }
         }
      },
      {
         "type":"Microsoft.Synapse/workspaces/sqlPools",
         "apiVersion":"2019-06-01-preview",
         "name":"[concat(variables('workspace_name_dreamdemosynapse'), '/', variables('sql_compute_name'))]",
         "location":"[variables('location')]",
         "dependsOn":[
            "[concat('Microsoft.Synapse/workspaces/', variables('workspace_name_dreamdemosynapse'))]",
            "[concat('Microsoft.Synapse/workspaces/', variables('workspace_name_dreamdemosynapse'), '/bigDataPools/', variables('spark_compute_name'))]"
         ],
         "sku":{
            "name":"[variables('sql_server_sku')]"
         },
         "properties":{
            "createMode":"Default",
            "collation":"SQL_Latin1_General_CP1_CI_AS"
         }
      },
      {
         "name":"[variables('cdp_vision_ase_name')]",
         "type":"Microsoft.Web/serverfarms",
         "apiVersion":"2019-08-01",
         "kind":"app",
         "location":"[variables('location')]",
         "properties":{
            "name":"[variables('cdp_vision_ase_name')]"
         },
         "sku":{
            "name":"S1"
         }
      },
      {
         "name":"[variables('cdp_vision_ai_name')]",
         "type":"Microsoft.Insights/components",
         "apiVersion":"2018-05-01-preview",
         "location":"[variables('location')]",
         "properties":{
            "Application_Type":"web",
            "Flow_Type":"Bluefield",
            "Request_Source":"rest"
         }
      },
      {
         "name":"[variables('cdp_vision_app_service_name')]",
         "type":"Microsoft.Web/sites",
         "apiVersion":"2018-11-01",
         "kind":"app",
         "location":"[variables('location')]",
         "dependsOn":[
            "[concat('Microsoft.Insights/components/', toLower(variables('cdp_vision_ai_name')))]",
            "[concat('Microsoft.Web/serverfarms/', toLower(variables('cdp_vision_ase_name')))]"
         ],
         "properties":{
            "enabled":true,
            "hostNameSslStates":[
               {
                  "name":"[concat(variables('cdp_vision_app_service_name'), '.azurewebsites.net')]",
                  "sslState":"Disabled",
                  "hostType":"Standard"
               },
               {
                  "name":"[concat(variables('cdp_vision_app_service_name'), '.scm.azurewebsites.net')]",
                  "sslState":"Disabled",
                  "hostType":"Repository"
               }
            ],
            "serverFarmId":"[resourceId(variables('resource_group_name'),'Microsoft.Web/serverfarms', variables('cdp_vision_ase_name'))]",
            "siteConfig":{
               "appSettings":[
                  {
                     "name":"APPINSIGHTS_PROFILERFEATURE_VERSION",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"APPINSIGHTS_SNAPSHOTFEATURE_VERSION",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"ApplicationInsightsAgent_EXTENSION_VERSION",
                     "value":"~2",
                     "slotSetting":false
                  },
                  {
                     "name":"DiagnosticServices_EXTENSION_VERSION",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"InstrumentationEngine_EXTENSION_VERSION",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"SnapshotDebugger_EXTENSION_VERSION",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"XDT_MicrosoftApplicationInsights_BaseExtensions",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"XDT_MicrosoftApplicationInsights_Mode",
                     "value":"recommended",
                     "slotSetting":false
                  },
                  {
                     "name":"AppInsights_Instrumentation_Key",
                     "value":"[reference(resourceId('Microsoft.Insights/components', variables('cdp_vision_ai_name'))).InstrumentationKey]",
                     "slotSetting":false
                  }
               ],
               "use32BitWorkerProcess":true,
               "alwaysOn":true,
               "managedPipelineMode":"Integrated"
            }
         }
      },
      {
         "name":"[variables('manufacturing_demo_ecommerce_ase_name')]",
         "type":"Microsoft.Web/serverfarms",
         "apiVersion":"2019-08-01",
         "kind":"app",
         "location":"[variables('location')]",
         "properties":{
            "name":"[variables('manufacturing_demo_ecommerce_ase_name')]"
         },
         "sku":{
            "name":"S1"
         }
      },
      {
         "name":"[variables('manufacturing_demo_ecommerce_ai_name')]",
         "type":"Microsoft.Insights/components",
         "apiVersion":"2018-05-01-preview",
         "location":"[variables('location')]",
         "properties":{
            "Application_Type":"web",
            "Flow_Type":"Bluefield",
            "Request_Source":"rest"
         }
      },
      {
         "name":"[variables('manufacturing_demo_ecommerce_app_service_name')]",
         "type":"Microsoft.Web/sites",
         "apiVersion":"2018-11-01",
         "kind":"app",
         "location":"[variables('location')]",
         "dependsOn":[
            "[concat('Microsoft.Insights/components/', toLower(variables('manufacturing_demo_ecommerce_ai_name')))]",
            "[concat('Microsoft.Web/serverfarms/', toLower(variables('manufacturing_demo_ecommerce_ase_name')))]"
         ],
         "properties":{
            "enabled":true,
            "hostNameSslStates":[
               {
                  "name":"[concat(variables('manufacturing_demo_ecommerce_app_service_name'), '.azurewebsites.net')]",
                  "sslState":"Disabled",
                  "hostType":"Standard"
               },
               {
                  "name":"[concat(variables('manufacturing_demo_ecommerce_app_service_name'), '.scm.azurewebsites.net')]",
                  "sslState":"Disabled",
                  "hostType":"Repository"
               }
            ],
            "serverFarmId":"[resourceId(variables('resource_group_name'),'Microsoft.Web/serverfarms', variables('manufacturing_demo_ecommerce_ase_name'))]",
            "siteConfig":{
               "appSettings":[
                  {
                     "name":"APPINSIGHTS_PROFILERFEATURE_VERSION",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"APPINSIGHTS_SNAPSHOTFEATURE_VERSION",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"ApplicationInsightsAgent_EXTENSION_VERSION",
                     "value":"~2",
                     "slotSetting":false
                  },
                  {
                     "name":"DiagnosticServices_EXTENSION_VERSION",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"InstrumentationEngine_EXTENSION_VERSION",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"SnapshotDebugger_EXTENSION_VERSION",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"XDT_MicrosoftApplicationInsights_BaseExtensions",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"XDT_MicrosoftApplicationInsights_Mode",
                     "value":"recommended",
                     "slotSetting":false
                  },
                  {
                     "name":"AppInsights_Instrumentation_Key",
                     "value":"[reference(resourceId('Microsoft.Insights/components', variables('manufacturing_demo_ecommerce_ai_name'))).InstrumentationKey]",
                     "slotSetting":false
                  }
               ],
               "use32BitWorkerProcess":true,
               "alwaysOn":true,
               "managedPipelineMode":"Integrated"
            }
         }
      },
      {
         "name":"[variables('car_telemetry_ase_name')]",
         "type":"Microsoft.Web/serverfarms",
         "apiVersion":"2019-08-01",
         "kind":"app",
         "location":"[variables('location')]",
         "properties":{
            "name":"[variables('car_telemetry_ase_name')]"
         },
         "sku":{
            "name":"S1"
         }
      },
      {
         "name":"[variables('car_telemetry_ai_name')]",
         "type":"Microsoft.Insights/components",
         "apiVersion":"2018-05-01-preview",
         "location":"[variables('location')]",
         "properties":{
            "Application_Type":"web",
            "Flow_Type":"Bluefield",
            "Request_Source":"rest"
         }
      },
      {
         "name":"[variables('car_telemetry_app_service_name')]",
         "type":"Microsoft.Web/sites",
         "apiVersion":"2018-11-01",
         "kind":"app",
         "location":"[variables('location')]",
         "dependsOn":[
            "[concat('Microsoft.Insights/components/', toLower(variables('car_telemetry_ai_name')))]",
            "[concat('Microsoft.Web/serverfarms/', toLower(variables('car_telemetry_ase_name')))]"
         ],
         "properties":{
            "enabled":true,
            "hostNameSslStates":[
               {
                  "name":"[concat(variables('car_telemetry_app_service_name'), '.azurewebsites.net')]",
                  "sslState":"Disabled",
                  "hostType":"Standard"
               },
               {
                  "name":"[concat(variables('car_telemetry_app_service_name'), '.scm.azurewebsites.net')]",
                  "sslState":"Disabled",
                  "hostType":"Repository"
               }
            ],
            "serverFarmId":"[resourceId(variables('resource_group_name'),'Microsoft.Web/serverfarms', variables('car_telemetry_ase_name'))]",
            "siteConfig":{
               "appSettings":[
                  {
                     "name":"APPINSIGHTS_PROFILERFEATURE_VERSION",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"APPINSIGHTS_SNAPSHOTFEATURE_VERSION",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"ApplicationInsightsAgent_EXTENSION_VERSION",
                     "value":"~2",
                     "slotSetting":false
                  },
                  {
                     "name":"DiagnosticServices_EXTENSION_VERSION",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"InstrumentationEngine_EXTENSION_VERSION",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"SnapshotDebugger_EXTENSION_VERSION",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"XDT_MicrosoftApplicationInsights_BaseExtensions",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"XDT_MicrosoftApplicationInsights_Mode",
                     "value":"recommended",
                     "slotSetting":false
                  },
                  {
                     "name":"AppInsights_Instrumentation_Key",
                     "value":"[reference(resourceId('Microsoft.Insights/components', variables('car_telemetry_ai_name'))).InstrumentationKey]",
                     "slotSetting":false
                  }
               ],
               "use32BitWorkerProcess":true,
               "alwaysOn":true,
               "managedPipelineMode":"Integrated"
            }
         }
      },
      {
         "name":"[variables('sendtohub_telemetry_ase_name')]",
         "type":"Microsoft.Web/serverfarms",
         "apiVersion":"2019-08-01",
         "kind":"app",
         "location":"[variables('location')]",
         "properties":{
            "name":"[variables('sendtohub_telemetry_ase_name')]"
         },
         "sku":{
            "name":"S1"
         }
      },
      {
         "name":"[variables('sendtohub_telemetry_ai_name')]",
         "type":"Microsoft.Insights/components",
         "apiVersion":"2018-05-01-preview",
         "location":"[variables('location')]",
         "properties":{
            "Application_Type":"web",
            "Flow_Type":"Bluefield",
            "Request_Source":"rest"
         }
      },
      {
         "name":"[variables('sendtohub_telemetry_app_service_name')]",
         "type":"Microsoft.Web/sites",
         "apiVersion":"2018-11-01",
         "kind":"app",
         "location":"[variables('location')]",
         "dependsOn":[
            "[concat('Microsoft.Insights/components/', toLower(variables('sendtohub_telemetry_ai_name')))]",
            "[concat('Microsoft.Web/serverfarms/', toLower(variables('sendtohub_telemetry_ase_name')))]"
         ],
         "properties":{
            "enabled":true,
            "hostNameSslStates":[
               {
                  "name":"[concat(variables('sendtohub_telemetry_app_service_name'), '.azurewebsites.net')]",
                  "sslState":"Disabled",
                  "hostType":"Standard"
               },
               {
                  "name":"[concat(variables('sendtohub_telemetry_app_service_name'), '.scm.azurewebsites.net')]",
                  "sslState":"Disabled",
                  "hostType":"Repository"
               }
            ],
            "serverFarmId":"[resourceId(variables('resource_group_name'),'Microsoft.Web/serverfarms', variables('sendtohub_telemetry_ase_name'))]",
            "siteConfig":{
               "appSettings":[
                  {
                     "name":"APPINSIGHTS_PROFILERFEATURE_VERSION",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"APPINSIGHTS_SNAPSHOTFEATURE_VERSION",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"ApplicationInsightsAgent_EXTENSION_VERSION",
                     "value":"~2",
                     "slotSetting":false
                  },
                  {
                     "name":"DiagnosticServices_EXTENSION_VERSION",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"InstrumentationEngine_EXTENSION_VERSION",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"SnapshotDebugger_EXTENSION_VERSION",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"XDT_MicrosoftApplicationInsights_BaseExtensions",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"XDT_MicrosoftApplicationInsights_Mode",
                     "value":"recommended",
                     "slotSetting":false
                  },
                  {
                     "name":"AppInsights_Instrumentation_Key",
                     "value":"[reference(resourceId('Microsoft.Insights/components', variables('sendtohub_telemetry_ai_name'))).InstrumentationKey]",
                     "slotSetting":false
                  }
               ],
               "use32BitWorkerProcess":true,
               "alwaysOn":true,
               "managedPipelineMode":"Integrated"
            }
         }
      },
      {
         "name":"[variables('sku2_telemetry_ase_name')]",
         "type":"Microsoft.Web/serverfarms",
         "apiVersion":"2019-08-01",
         "kind":"app",
         "location":"[variables('location')]",
         "properties":{
            "name":"[variables('sku2_telemetry_ase_name')]"
         },
         "sku":{
            "name":"S1"
         }
      },
      {
         "name":"[variables('sku2_telemetry_ai_name')]",
         "type":"Microsoft.Insights/components",
         "apiVersion":"2018-05-01-preview",
         "location":"[variables('location')]",
         "properties":{
            "Application_Type":"web",
            "Flow_Type":"Bluefield",
            "Request_Source":"rest"
         }
      },
      {
         "name":"[variables('sku2_telemetry_app_service_name')]",
         "type":"Microsoft.Web/sites",
         "apiVersion":"2018-11-01",
         "kind":"app",
         "location":"[variables('location')]",
         "dependsOn":[
            "[concat('Microsoft.Insights/components/', toLower(variables('sku2_telemetry_ai_name')))]",
            "[concat('Microsoft.Web/serverfarms/', toLower(variables('sku2_telemetry_ase_name')))]"
         ],
         "properties":{
            "enabled":true,
            "hostNameSslStates":[
               {
                  "name":"[concat(variables('sku2_telemetry_app_service_name'), '.azurewebsites.net')]",
                  "sslState":"Disabled",
                  "hostType":"Standard"
               },
               {
                  "name":"[concat(variables('sku2_telemetry_app_service_name'), '.scm.azurewebsites.net')]",
                  "sslState":"Disabled",
                  "hostType":"Repository"
               }
            ],
            "serverFarmId":"[resourceId(variables('resource_group_name'),'Microsoft.Web/serverfarms', variables('sku2_telemetry_ase_name'))]",
            "siteConfig":{
               "appSettings":[
                  {
                     "name":"APPINSIGHTS_PROFILERFEATURE_VERSION",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"APPINSIGHTS_SNAPSHOTFEATURE_VERSION",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"ApplicationInsightsAgent_EXTENSION_VERSION",
                     "value":"~2",
                     "slotSetting":false
                  },
                  {
                     "name":"DiagnosticServices_EXTENSION_VERSION",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"InstrumentationEngine_EXTENSION_VERSION",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"SnapshotDebugger_EXTENSION_VERSION",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"XDT_MicrosoftApplicationInsights_BaseExtensions",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"XDT_MicrosoftApplicationInsights_Mode",
                     "value":"recommended",
                     "slotSetting":false
                  },
                  {
                     "name":"AppInsights_Instrumentation_Key",
                     "value":"[reference(resourceId('Microsoft.Insights/components', variables('sku2_telemetry_ai_name'))).InstrumentationKey]",
                     "slotSetting":false
                  }
               ],
               "use32BitWorkerProcess":true,
               "alwaysOn":true,
               "managedPipelineMode":"Integrated"
            }
         }
      },
      {
         "name":"[variables('data_gen_telemetry_ase_name')]",
         "type":"Microsoft.Web/serverfarms",
         "apiVersion":"2019-08-01",
         "kind":"app",
         "location":"[variables('location')]",
         "properties":{
            "name":"[variables('data_gen_telemetry_ase_name')]"
         },
         "sku":{
            "name":"S1"
         }
      },
      {
         "name":"[variables('data_gen_telemetry_ai_name')]",
         "type":"Microsoft.Insights/components",
         "apiVersion":"2018-05-01-preview",
         "location":"[variables('location')]",
         "properties":{
            "Application_Type":"web",
            "Flow_Type":"Bluefield",
            "Request_Source":"rest"
         }
      },
      {
         "name":"[variables('data_gen_telemetry_app_service_name')]",
         "type":"Microsoft.Web/sites",
         "apiVersion":"2018-11-01",
         "kind":"app",
         "location":"[variables('location')]",
         "dependsOn":[
            "[concat('Microsoft.Insights/components/', toLower(variables('data_gen_telemetry_ai_name')))]",
            "[concat('Microsoft.Web/serverfarms/', toLower(variables('data_gen_telemetry_ase_name')))]"
         ],
         "properties":{
            "enabled":true,
            "hostNameSslStates":[
               {
                  "name":"[concat(variables('data_gen_telemetry_app_service_name'), '.azurewebsites.net')]",
                  "sslState":"Disabled",
                  "hostType":"Standard"
               },
               {
                  "name":"[concat(variables('data_gen_telemetry_app_service_name'), '.scm.azurewebsites.net')]",
                  "sslState":"Disabled",
                  "hostType":"Repository"
               }
            ],
            "serverFarmId":"[resourceId(variables('resource_group_name'),'Microsoft.Web/serverfarms', variables('data_gen_telemetry_ase_name'))]",
            "siteConfig":{
               "appSettings":[
                  {
                     "name":"APPINSIGHTS_PROFILERFEATURE_VERSION",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"APPINSIGHTS_SNAPSHOTFEATURE_VERSION",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"ApplicationInsightsAgent_EXTENSION_VERSION",
                     "value":"~2",
                     "slotSetting":false
                  },
                  {
                     "name":"DiagnosticServices_EXTENSION_VERSION",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"InstrumentationEngine_EXTENSION_VERSION",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"SnapshotDebugger_EXTENSION_VERSION",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"XDT_MicrosoftApplicationInsights_BaseExtensions",
                     "value":"disabled",
                     "slotSetting":false
                  },
                  {
                     "name":"XDT_MicrosoftApplicationInsights_Mode",
                     "value":"recommended",
                     "slotSetting":false
                  },
                  {
                     "name":"AppInsights_Instrumentation_Key",
                     "value":"[reference(resourceId('Microsoft.Insights/components', variables('data_gen_telemetry_ai_name'))).InstrumentationKey]",
                     "slotSetting":false
                  }
               ],
               "use32BitWorkerProcess":true,
               "alwaysOn":true,
               "managedPipelineMode":"Integrated"
            }
         }
      },
      {
         "name":"[variables('azure_function_storage_name')]",
         "type":"Microsoft.Storage/storageAccounts",
         "apiVersion":"2019-04-01",
         "location":"[variables('location')]",
         "sku":{
            "name":"Standard_LRS",
            "tier":"Standard"
         },
         "kind":"Storage",
         "properties":{

         }
      },
      {
         "name":"[variables('azure_function_ase_name')]",
         "type":"Microsoft.Web/serverfarms",
         "apiVersion":"2019-08-01",
         "location":"[variables('location')]",
         "properties":{
            "name":"[variables('azure_function_ase_name')]",
            "computeMode":"Dynamic"
         },
         "sku":{
            "name":"Y1",
            "tier":"Dynamic"
         }
      },
      {
         "name":"[variables('azure_function_ai_name')]",
         "type":"Microsoft.Insights/components",
         "apiVersion":"2018-05-01-preview",
         "location":"[variables('location')]",
         "properties":{
            "Application_Type":"web",
            "Flow_Type":"Bluefield",
            "Request_Source":"rest"
         }
      },
      {
         "name":"[variables('azure_function_functions_app_name')]",
         "type":"Microsoft.Web/sites",
         "apiVersion":"2018-11-01",
         "kind":"functionapp",
         "location":"[variables('location')]",
         "dependsOn":[
            "[concat('Microsoft.Insights/components/', toLower(variables('azure_function_ai_name')))]",
            "[concat('Microsoft.Web/serverfarms/', toLower(variables('azure_function_ase_name')))]",
            "[concat('Microsoft.Storage/storageAccounts/', toLower(variables('azure_function_storage_name')))]"
         ],
         "properties":{
            "enabled":true,
            "hostNameSslStates":[
               {
                  "name":"[concat(variables('azure_function_functions_app_name'), '.azurewebsites.net')]",
                  "sslState":"Disabled",
                  "hostType":"Standard"
               },
               {
                  "name":"[concat(variables('azure_function_functions_app_name'), '.scm.azurewebsites.net')]",
                  "sslState":"Disabled",
                  "hostType":"Repository"
               }
            ],
            "serverFarmId":"[resourceId('Microsoft.Web/serverfarms', variables('azure_function_ase_name'))]",
            "reserved":false,
            "siteConfig":{
               "netFrameworkVersion":"v4.0",
               "appSettings":[
                  {
                     "name":"AzureWebJobsDashboard",
                     "value":"[concat('DefaultEndpointsProtocol=https;AccountName=', variables('azure_function_storage_name'), ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('azure_function_storage_name')),'2019-04-01').keys[0].value)]"
                  },
                  {
                     "name":"AzureWebJobsStorage",
                     "value":"[concat('DefaultEndpointsProtocol=https;AccountName=', variables('azure_function_storage_name'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('azure_function_storage_name')),'2019-04-01').keys[0].value)]"
                  },
                  {
                     "name":"WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                     "value":"[concat('DefaultEndpointsProtocol=https;AccountName=', variables('azure_function_storage_name'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('azure_function_storage_name')),'2019-04-01').keys[0].value)]"
                  },
                  {
                     "name":"APPINSIGHTS_INSTRUMENTATIONKEY",
                     "value":"[reference(resourceId('Microsoft.Insights/components', variables('azure_function_ai_name'))).InstrumentationKey]"
                  },
                  {
                     "name":"APPLICATIONINSIGHTS_CONNECTION_STRING",
                     "value":"[concat('InstrumentationKey=',reference(resourceId('Microsoft.Insights/components', variables('azure_function_ai_name'))).InstrumentationKey)]"
                  },
                  {
                     "name":"ENABLE_ORYX_BUILD",
                     "value":"false"
                  },
                  {
                     "name":"FUNCTIONS_WORKER_RUNTIME",
                     "value":"dotnet"
                  },
                  {
                     "name":"FUNCTIONS_EXTENSION_VERSION",
                     "value":"~2"
                  },
                  {
                     "name":"WEBSITE_RUN_FROM_PACKAGE",
                     "value":"[variables('azure_function_functions_zip_url')]"
                  }
               ],
               "use32BitWorkerProcess":true,
               "managedPipelineMode":"Integrated",
               "cors":{
                  "allowedOrigins":[
                     "https://functions.azure.com",
                     "https://functions-staging.azure.com",
                     "https://functions-next.azure.com"
                  ],
                  "supportCredentials":false
               }
            },
            "containerSize":1536,
            "httpsOnly":false
         }
      },
      {
         "name":"[variables('container_registry_name')]",
         "type":"Microsoft.ContainerRegistry/registries",
         "apiVersion":"2019-05-01",
         "location":"[variables('location')]",
         "sku":{
            "name":"Basic",
            "tier":"Basic"
         },
         "properties":{
            "adminUserEnabled":true,
            "policies":{
               "quarantinePolicy":{
                  "status":"disabled"
               },
               "trustPolicy":{
                  "type":"Notary",
                  "status":"disabled"
               },
               "retentionPolicy":{
                  "days":7,
                  "status":"disabled"
               }
            }
         }
      },
      {
         "type":"Microsoft.PowerBIDedicated/capacities",
         "apiVersion":"2017-10-01",
         "name":"[variables('powerbi_embeded_mfg_name')]",
         "location":"[variables('location')]",
         "sku":{
            "name":"A1",
            "tier":"PBIE_Azure",
            "capacity":1
         },
         "properties":{
            "administration":{
               "members":[
                  "[parameters('powerbi_embedded_admin_member_email')]"
               ]
            }
         }
      }
   ],
   "outputs":{

   }
}
